{
  "name": "PN721",
  "functions": [
    {
      "name": "_check_id_match",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "private_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "H4sIAAAAAAAA/+2dCZhlRXXH3+2erbpmAWZfYJpZEBChpxgREaHhgez7JpswDMMiy8gmmwiIiAgiIiICIjHGGDXGuMUtbnGLW9ziFrcYY4wxxrjjRk7dV3/mPzU3N/ZHnfTrr0993/le1al36/8759S779373kz/SafTqTq9Nig2t7Nlw/xoehx5bG1NVW6tEU3OgQnCOThBOKdMEM6pE4Rz2gThnD5BOGdMEE43QTiHJginnyCcMycI56wJwjl7gnDOmSCcW00Qzq0nCOc2E4RzbkHOxcQ5Lz3OT48L0uPC9LgoPeKYJelxaYpxShovE9tWbDux5WkOCRkW215shdhKsVViq8V2EHuc2I5iO4ntLPZ4sV3EniC2q9huaZ01YkFsd7G1Yk8U20PsSWJ7ij1ZbC+xp4jtLfZUsX3E9k15209sf7Gu2AFiB4o9TewgsYPFDhE7VOwwscPFjhA7UuyoFMtwiuVosWPEjhU7Tux4sRPEThQ7SezpYieLnSJ2qthpYqeLPUPsDLEzxdaJnSW2XuxssQ1i54idK3ae2PlizxS7QOxCsYvELhbbmOX8WWKXiF0qdlma2yrNXS52hdizxa4Uu0rsarFrxK4Ve47YdWLPFbte7AaxG8WeJ3ZTttbzxW4We4HYLWIvFLtV7EVit4ndLvZisTvEXiJ2p9hLxe4Se1laayCtdbfYyzPfPWKvSP170+Mr0+N96fH+9PhAenxVenwwPb46PT7U2dSO973H+FkO+3ybziYfrsO3Jh/mtyIf5ueQD/OzyYf5WeTD/EzyYd6TD/ND5ON5PGJ+BvkwP518mJ9GPsxPJR/mp5AP84Pkw/wA+TBfkQ/znUw/ttH0OPIY27RO8fPrSIx5hOLoNMTL93DyeKc05GVqQ/64HpjnumGe68vzeMQ87xfM877BPO8/zPM+xTzvZ8zzvsc8vz4wz68jzPPrDfNzyYf5eeTD/HzyYX4B+TC/kHyYX0Q+zC8mH+bxfhbjmkbPGU2PI4+tBdZCq7LxKPWhH1mWKrAsGQPLUmJZVpalvr7eNq21iHS2K6xTkQ7WxRhanhiWKbL4Bm0NHZfFHFtbnZlleVmW+pQ6TFrgWk65x/w84hgunJOKNLEuxtBy5FsyziyeGLYlH563nR5fcBlfbG37Z5hYVhRlWTMSWbYfA8sKYllZlKX3uWNV4TXjGquJH7GC3dP8KoptdVmOek+u7GyeU4yZz1iN1ViN1ViN1ViN1VgnN6sj3/JxZuHro+3VWNaM+AZtjesNvseFteN9xPtJc9vCscU859eWYIDWID1n/6FNXLgHP0Tzy9VYw3qte2S4B4T2x94jW1K4FvGe7HTKZX4/AJwDxLCoKMOW92+gCZ1Ya9yzxPP4Pizm4v54I3H2y31WvifK9yEL76v6/LUkY+HvUmPj+5ADiiy+Qbuf7jfza5Dvw5U9f/RqsixjwZjvuYFhUJHFN2gr6Iz5/Ab9eBzOQ3yPvPD94jX8/oN18/cSztUURRbfaX4fK6wTXBZzbG01gX48bjj1+T17+8J54N8/YF2MocW5mqrI4hu0FXQC5xatrSbQj8fhHvQw8RX+bFjXZEXGgjFfJzCDFotv0FbQCS6LOba2mkA/HofrJP5+QOMaZVXGgjFfo4BhuiKLb9BW0Akuizm2tprwdeMOqc/XsI8rnIeKdLAuxtDiXM1QZPEN2go6wWUxx9ZWE+jH43ZM/R2Ib6fCeahIB+tiDC3OlVNk8Q3aCjrBZTHH1laTnSj2nVN/R+J7fOE8VKSDdTGGFudqSJHFN2gr6ASXxRxbW02gH4/bJfV3Jr4nFM5DRTpYF2Noca68Iotv0FbQCS6LOba2mkA/Hrdr6u9CfLsVzkNFOlgX492oDmCYqcjiG7QVdILLYo6trSbQj8fhN5W7Et+awnng35pjXYyhxbmapcjiG7QVdILLYo6trSbQj8cFMBDf7oXzUJEO1sUYWpyr2YosvkFbQSe4LObY2moC/Xjc2tQPxPfEwnmoSAfrYgwtztUcRRbfoK2gE1wWc2xtNYF+PG6P1F9LfE8qnIeKdLAuxtDiXG2lyOIbtBV0gstijq2tJtCPx+2Z+nsQ35ML56EiHayLMbQ4V1srsvgGbQWd4LKYY2urCfTjcXul/p7E95TCeahIB+tiDC3O1TaKLL5BW0EnuCzm2NpqAv143N6pvxfxPbVwHirSwboYQ4tzNVeRxTdoK+gEl8UcW1tNoB+P2yf19ya+fQvnoSIdrIsxtDhXCxRZfIO2gk5wWcyxtdWEWfYry7LWZVr/F8t+xLJ/WZb69+rdwmvGNQ5oiAXsnua7FNsBZTnqfb5/xoEx8xnr5GZ15NtnnFn4fDiqx7LWN2gr6ASXxRxb27mOa3Jg6u9PfE8ry1fX5MCMBWNoca66iiy+QVtBJ7gs5tjaasIsBxdl2b3+/eJBY2A5mFgOKcrSe986lLTABR1P87wPDi3LUe/JQ7L4MWY+YzVWYzVWYzVWYzVWYzVWYzVWYzVWYzVWYzVWYzVWYzVWYzVWYzVWYzVWYzVWYy3P6sh34Diz8G9JDlJj2b3+f65ybYWYg8tijq3tdyJck8NS/xDiO7wsX12TwzIWjKHFueoqsvgGbQWd4LKYY2urCbMcWZQl1L8jOmIMLEcSy1FFWXq/IzqatMAFHU/zvA+OLstR78mjsvgxZj5jNVZjNVZjNVZjNVZjNVZjNVZjNVZjNVZjNVZjNdaJwurId9g4s/C9+CPUWEL9PUyurRBzcFnMsbXdZ+eaHJP6RxHfsWX56pock7FgDC3OVVeRxTdoK+gEl8UcW1tNmOX4siz1/21y3BhYjieWE8qyjMQ1TiQtcEHH0zzvgxPLctR78oQsfoyZz1gnN6sj3zHjzMLnruP0WOr/hyTXVtAJLos5trbzEtfkpNQ/gfieXpavrslJGQvG0OJcdRVZfIO2gk5wWcyxtdWEWU4pytL7G9Inj4HlFGI5tShL733rNNICF3Q8zfM+OK0sR70nT83ix5j5jNVYjdVYjdVYjdVYjXVyszrynTTOLHwtc7IaS+/vPefaCjEHl8UcW9t1Ctfk9NQ/lfieUZavrsnpGQvG0OJcdRVZfIO2gk5wWcyxtdWEWc4sytK7jj1jDCxnEsu6oiy969izSAtc0PE0z/vgrLIc9Z5cl8WPMfMZq7Eaq7Eaq7Eaq7Ea6+RmdeQ7fZxZ+FrmDDWW3nVsrq0Qc3BZzLFV2XiU+lyT9am/jvjOLstX12R9xoIxtDhXXUUW36CtoBNcFnNsbTVhlnMUWDaMgeUcYjm3LEt9HXseaYELOp7meR+cV5aj3pPnZvFjzHwThdWRb/04s/BrbIMeS/AN2ho6Los5trbXD9fk/NQ/l/ieWZavrsn5GQvG0OJcdRVZfIO2gk5wWcyxtdWEWS5UYLlgDCwXEstFZVnq8+vFpAUu6Hia531wcVmOek9elMWPMfNNFFZHvvPHmYVfYxfosdTn11xbQ8dlMcfW9vrhmmxM/YuI71ll+eqabMxYMIYW56qryOIbtBV0gstijq2tJtCPx12S+huJ79LCeahIB+tiDC3OVVeRxTdoK+gEl8UcW1tNoB+Puyz1LyG+ywvnoSIdrIsxtDhXTpHFN2gr6ASXxRxbW00up9ivSP3LiO/ZhfNQkQ7WxRhanKshRRbfoK2gE1wWc2xtNYF+PO7K1L+C+K4qnIeKdLAuxtDiXHlFFt+graATXBZzbG01gX487urUv5L4rimch4p0sC7G11AdwDBTkcU3aCvoBJfFHFtbTaAfj7s29a8mvucUzkNFOlgXY2hxrmYpsvgGbQWd4LKYY2urCfTjcdel/rXE99zCeahIB+tiDC3O1WxFFt+graATXBZzbG01gX487vrUv474biich4p0sC7G0OJczVFk8Q3aCjqBc4vWVpMb0mM87sbUv574nlc4DxXpYF2MocW56iqy+AZtBZ3gsphja6sJ9ONxN6X+jcT3/MJ5qEgH62IMLc5VV5HFN2gr6ASXxRxbW02gH4+7OfVvIr4XFM5DRTpYF2Noca66iiy+QVtBJ7gs5tjaagL9eNwtqX8z8b2wcB4q0sG6GEOLc9VVZPEN2go6wWUxx9ZWE+jH425N/VuI70WF81CRDtbFGFqcq64ii2/QVtAJLos5traaMMttZVnq34Lfnta6lXReXDi3FelgXYyhxfm/TZHFN2gr6ASXxRxbW52hH4+7I/VvJ76XFM5DRTpYF2Noca5uU2TxDdoKOsFlMcfWVhPox+PuTP07iO+lhfNQkQ7WxRhanKvbFFl8g7aCTnBZzLG11QT68bi7Uv9O4ntZ4TxUpIN1MYYW56qryOIbtBV0gstijq2tJtCPx92d+ncR38sL56EiHayLMbQ4V11FFt+graATXBZzbG01gX487p7Uv5v4XlE4DxXpYF2MocW56iqy+AZtBZ3gsphja6sJ9ONx96b+PcT3ysJ5qEgH62IMLc5VV5HFN2gr6ASXxRxbW02gH4+7L/XvJb77C+ehIh2sizG0OFddRRbfoK2gE1wWc2xtNYF+PO6B1L+P+F5VOA8V6WBdjKHFueoqsvgGbQWd4LKYY2urCfTjcQ+m/gPE9+rCeahIB+tiDC3OVVeRxTdoK+gEl8UcW1tNoB+Peyj1HyS+Pymch4p0sC7G0OJcdRVZfIO2gk7g3KK11QT68bjXpP5DxPenhfNQkQ7WxRhanKuuIotv0FbQCS6LOba2mkA/Hvfa1H8N8f1Z4TxUpIN1MYYW56qryOIbtBV0gstijq2tJtCPx70u9V9LfH9eOA8V6WBdjKHFueoqsvgGbQWd4LKYY2urCfTjca9P/dcR318UzkNFOlgXY2hxrrqKLL5BW0EnuCzm2NpqAv143BtS//XE98bCeahIB+tiDC3OVVeRxTdoK+gEl8UcW1tNoB+Pe1Pqv4H4/rJwHirSwboYQ4tz1VVk8Q3aCjrBZTHH1lYT6Mfj3pz6byK+vyqch4p0sC7G0OJcdRVZfIO2gk5wWcyxtdUE+vG4t6T+m4nvrwvnoSIdrIsxtDhXXUUW36CtoBNcFnNsbTVhlreVZan/tsNbx8DyNmJ5e1mW+t8MvoO0wAUdT/O8D95RlqPek2/P4seY+Yx1crM68r1lnFn43PVWPZb6bzvk2go6wWUxx9Z2XuKavDP13058f1OWr67JOzMWjKHFueoqsvgGbQWd4LKYY2urCbO8uyhLqH8H9a4xsLybWN5TlKX3vvVe0gIXdDzN8z54b1mOek++J4sfY+YzVmM1VmM1VmM1VmM1VmN9r7Eaq7Eaq7Eaq7Eaq7Ea6wRhdeR75ziz8L34d6mxhPr/dM+1FWIOLos5trb77FyT96X+e4jvb8vy1TV5X8aCMbQ4V11FFt+graATXBZzbG01YZYPFGXp/W2y94+B5QPE8sGiLL3vYT5EWuCCjqd53gcfKstR78kPZvFjzHzGaqzGaqzGaqzGaqzGOrlZHfneN84sfC3zfjWW3t8my7UVYg6cW7QqG49Sn2vy4dT/IPH9XVm+uiYfzlgwhhbnqqvI4hu0FXSCy2KOra0mzPLRoiy969iPjIHlo8TysaIsvevYj5MWuKDjaZ73wcfLctR78mNZ/Bgzn7Eaq7Eaq7Eaq7Eaq7FOblZHvg+PMwtfy3xEjaV3HZtrK8QcXBZzbG3XKVyTT6T+x4jv78vy1TX5RMaCMbQ4V11FFt+graATXBZzbG01YZZPFWXpXcd+cgwsnyKWTxdl6V3Hfoa0wAUdT/O8Dz5TlqPek5/O4seY+YzVWI3VWI3VWI3VWI11crM68n1inFn4WuaTaiy969hcWyHm4LKYY2u7TuGafDb1P018/1CWr67JZzMWjKHFueoqsvgGbQWd4LKYY2urCbN8vixL/f+SfW4MLJ8nli+UZamvY79IWuCCjqd53gdfLMtR78kvZPFjzHzGOrlZHfk+O84sfO76nB5L/f+S5doKOsFlMcfWdl7imnwp9b9AfP9Ylq+uyZcyFoyhxbnqKrL4Bm0FneCymGNrqwmzfKUsS/2+9eUxsHyFWL5alqV+3/oaaYELOp7meR98rSxHvSe/msWPMfMZ6+RmdeT70jiz8Lnry3os9ftWrq2gE1wWc2xt5yWuyddT/6vE909l+eqafD1jwRhanKuuIotv0FbQCS6LOba2mjDLNxVYvjEGlm8Sy7fKstTvW98mLXBBx9M874Nvl+Wo9+S3svgxZr6JwurI9/VxZuHX2Df0WIJv0NbQcVnMsbW9frgm30n9bxHfP5flq2vynYwFY2hxrrqKLL5BW0EncG7R2moC/Xjcd1P/O8T3L4XzUJEO1sUYWpyrriKLb9BW0Akuizm2tppAPx73vdT/LvH9a+E8VKSDdTGGFueqq8jiG7QVdILLYo6trSbQj8d9P/W/R3z/VjgPFelgXYyhxbnqKrL4Bm0FneCymGNrqwn043E/SP3vE9+/F85DRTpYF2Noca66iiy+QVtBJ7gs5tjaagL9eNwPU/8HxPcfhfNQkQ7WxRhanKuuIotv0FbQCS6LOba2mkA/Hvej1P8h8f1n4TxUpIN1MYYW56qryOIbtBV0gstijq2tJtCPx/049X9EfP9VOA8V6WBdjKHFueoqsvgG7WnkK6mDNqCc206W205DbtHm9BHLzD5icX3EMq2PWAb7iGVWH7EM9RHL9D5imdJHLAv7iGVBH7HM7yOWeX3EMruPWHwfsczoI5apfcRSjTOL62z5Od/R/I/JN5AdG/N4uN80/5PkH2hY5yedLZ/Hsf+3QuysM0pjaA0Rw0/6gGVqH7HM6CMW30css/uIZV4fsczvI5YFfcSysI9YpvQRy/Q+YhnqI5ZZfcQy2Ecs0/qIxfURy8w+YpnTRywDDSw/LcsyEtf4WWdTw2fdnxIHmPh56E+hebyXD9L8I+kkOSvx/7wsf/27Z+ZCTrmNUv/nlMtflGWpc/nLzpY5go6n+Z8Sxy/LctT76xdZ/Bgzn7FObtbyurvX/w8M68bW9npkll8VZem9Hn9NWuCCjqd5rsWvy3LUtfhVFj/GzGesxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqs5VnL64b69xGsG1vb7yOY5eGiLL3fR/yGtMAFHU/zXIvflOWoa/FwFj/GzGesxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxjpRWBV0638Py7qxtd1fZpbflmWp7y//jrTABR1P81yL35XlqGvx2yx+jJnPWCc3a3ndNfX3PawbW9vrkVl+X5Sl93r8A2mBCzqe5rkWfyjLUdfi91n8GDOfsRqrsRqrsRqrsRqrsU5u1vK6vc/nrBtb2+dzZnmkKEvv8zmLgws6nua5FvCNluGoa/FIZ/P4H2lKjrEaq7Eaq7Eaq7Eaq7FOalYF3fpvurEuSWzG0mlgqcqy1J/PB0gcXNDxNM+1GFCoRVVtHj/GzDdRWBV0631TZRulbd8wy6DCvplC4uAapFpMaajFFIVaDGa1wJj5JgqrI99AZ5MP84Pkm4pjyTct+aaSbzqfy5JvRvJNJ59LvhnkG0q+BeTzyfcz8s1Mvl+Qb1by/Yp8s5PvYfLNSb7fkm+r5Ps9+bZOvkfIt03yVZS/uVkto28ezeNxfvINkW8B7Qn4FibfTPItSr5Z5FucfLPJtyT55pBvaQMfaj3I+yD5eG+g1lPJ9+jfTSIfaj2dfKj1DPI9WmvyIUdD5EOOPPmQo5nkQ45mkQ85mk0+5GgO+ZCjrci3VfJtTb6tk28b8m2TfHN5HyQf1x7/n/t88s1PvgXkw35fSL6FybeIfIuSbzH5FiffEvItSb6l9LqLNdo2+UfT48hja/V7xHadzVvbewT0I8uysiz1fcilaa3tSGdJWZ36vLo0iw9jaHliWKbI4hu0y+uEEY45njuGO5v2MbR4Ly4lluHCMUeWRdn60IXWID3nuHQyieeyh4c2HVd4/9WvBexvtLbXgt6+CJu9Fv4YFt47i4uyjIzENRcVXjOuMUz8iBXsnubzvVKQo96Lizub5zTfi8ZqrMZqrMZqrMZqrMZqrMZqrMZqrMZqrMZqrMZqrBOJle/1bzvOLJ4Y9L53CCO+QVvjfjl/94e143cX36PvLpYWji3meVmWu4VZTgfpOQv8Jq4fJK4hmuc9UZh1vULOA39nilZl41HqL6b4yn63EUbid9rTKZeLsjqAc4AYti/K0Pt+ZQXFC03oxFoPpz6e56jP37+uLMtWnxOYbZTG0OLvX4cVWXyDNn/PGB/wWlhOuVvWkKey3wGueUzfAZb+vq7K6jBKGqxbeB+vYd0qGTTgH6T+EH5kQs+LDTUEc6zh4obncX9pdoyn+cXKMS8ijlEaQyvu0UeGNj1ncQP3fOLGPL9HFD4H19x8Dh4mBmjxb2CWE8vw/2MOhykvy7OclWdZU3/uyLX5d0TIWazp/cSh+Rkh/w3IUuICD56bf4YbpucspOMe/W0TxaB5PkCt8tcGnw+W0+ecg1P/f/uco/k7o5x1SeYvrYsaxN/6Mccw5QjP2SHlZVbiWVGYx3U2P692Ou3vYysoN4Xf7+vPRatIC1z8uQPz84hjVeGcVKSJdTFmvpUNrE3vYSvVWHu/RWKO2Nrqt4pYdijK0vsc8jhaf5Q0WHfHsrprWBefQ6AB/yD196XPITtu6j563gFzrOHqhudxf2V2jKf51cox70AcozSGVjyvrqVYVzdwLyRuzPPnAdSNz8WrFWJZlcWyKmPm+xAr1Vh69yFybX5/Kv/e34t/WWdTG+5seX+A71ssIy6+bzFYmCuuObXwmvy7d7S28xX042/bsZUvu3zjpevO3XDshnVnV7TElGy5AVqG+/zPLqZRKuHjS//Ypne2RCyWj7kEPZDgpqS4pyXxGZ1Nv9uPOYj3MOLngfi7+/g7+/i7+vg7+vi7+bnE+OL0GN8r42fJ+Dv4uIfie1R8jcfPOXF/xf0UX1vxejl+5h7u9N7P4nt9fK3F10N8LcTzSzyHxvPLTmI7iz1ebBexJ4jtKrZbzInYGrEgtrvYWrEniu0h9iSxPcWeLLaX2FPE9hZ7qtg+Yvum3O4ntr9YV+wAsQPFniZ2kNjBYoeIHSp2mNjhYkeIHSl2lNjRYseIHSt2nNjxYieInSh2ktjTxU4WO0XsVLHTxE4Xe4bYGWJniq0TO0tsvdjZYhvEzhE7V+w8sfPFnil2gdiFYheJXSy2UexZYpeIXSp2mdjlYleIPVvsSrGrxK4Wu0bsWrHniF0n9lyx68VuELtR7HliN4k9X+xmsReI3SL2QrFbxV4kdpvY7Z1ere8Qe4nYnWIvFbtL7GVid4u9XOwesVeI3Sv2SrH7Or1rmgfEXiX2oNirxR7qbNrwvPFXpxcg9tghF5+94arhjVdcPrzxnOGzNl5x8dmX/Q8bFF/W2/0BAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_init",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "admin_",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "private_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "H4sIAAAAAAAA/+2dB5hlRZXH3+3uCTU1AZjspJ5IEum5AyIi0sADyUmS5DBEYWaEAREQARERQUREREBwXVdd07oGVMyuOa1pTavCuq7ruq4BA0b21H31Z/5TXO9nf9Shb3996vvO9yq8qv/vnFP3vntf6H5dp9MpOr3SLzaz8+iC8eH4OPTYyuoi31pDmpx9Y4Szf4xwDowRzgljhHPiGOGcNEY4J48RTjdGOKeMEU4/RjinjhHOaWOEc/oY4ZwxRji3GCOcW44Rzq3GCOfMjJzziXNWfJwdH+fEx7nxcV58xJwnxMcF0ceB2F4otkhssdiSOIaADIotFVsmtlxshdhKsVViW4ttI7at2HZi24s9UWwHsSeJ7RjXWS1Wiq0R20lsZ7Eni+0i9hSxXcWeKrab2NPEdhd7utgeMW57iu0ltrdYV2wfsX3FniG2n9j+YgeIHSh2kNjBYoeIHRp9GYy+HCZ2uNgRYs8UO1LsKLGjxY4RO1bsWWLHiR0vdoLYiWIniZ0sdorYqWKniZ0utlbsDLEzxc4SO1vsHLFzxZ4tdp7Y+WLrxNYnMd8g9hyxC8QujGNbxLGNYheJXSz2XLFLxJ4ndqnYZWKXiz1f7AqxF4hdKXaV2NViL0zWukbsRWLXir1Y7Dqxl4hdL/ZSsRvEbhR7mdhNYi8Xu1nsFWK3xLX64lqvFLs16XuV2G2x/ur4eHt8fE18vCM+3hkf74qPr42Pd8fHezqbyoKpvcdwLYd9vlVnUx/uw7ekPoxvQX0Yn0F9GJ9OfRifRn0Yn0p9GPfUh/Ep1MfjeMT4ZOrD+CTqw/hE6sP4BOrD+AD1Ybyf+jDeR30YL6gP451EP5Th+Dj0GMvETvbz61DweYj86NT4y+/hpP4O1MRlQk38OB8Y57xhnPPL43jEOO8XjPO+wTjvP4zzPsU472eM877HOB8fGOfjCON8vGF8JvVhfBb1YXw29WF8DvVhfC71YXwe9WF8PvVhHK9nwa+J1B6Oj0OPrZSOdFGKpD1MdegHlgV5WYYCy8IkFkFnUV6d6r3HhYl/aEPLE8MCRRZfo62gU7rE51Ca8swsS/KyVHlePAKWJcQyqMCCNReSztK8Oqv5Gg3rog0t3guLqW/wcYoDzldYO7wm7E+amc89VUz42BomBmj103Me8Ju4Do59U2h8PvVhPuLJe47znHlvVz7x3h6m9hLiw/G1WI9liNcfoDgtodhi/L5i0/OOIab5eZlGfB6arxaf1a06Dymcc6r8LyN++Ap2T+NLybdleTkaz33MZ6zGaqzGaqzGaqzGaqzjm/Wv3ZuPBkvdvXl+ltVDvkZb634f70Vi7XDv9ybSXJzZtxDn+YlPc5KY9tNz3kdcb411vt/nPZH3vYnydK334EbyXusixVyE99MnUSyxPuIIzj5iGMzK0Ls/XbrJ3Uc0oRNyjXtuPI/fG8dY2B8fLrRiNfK8ab6nw+dEPpZG6/1KMCxRZPE12vl1yiH2ua+z+fmJ9x/Oy4PEsiKvzxXL8s6mErRwrEKroDqOT7Bhbj8953PxMRwvG+h4ybxHy8fyvlrunPLx8rewKF7zVO/xLc+8ZlhjBfEPxke+bsH4cvIt836tzhfLkpiizXzGaqzGaqzGaqzGaqzGaqzGaqzGaqzGaqzGaqzGaqxjhZU/D1g8yiy+8+jP8/OzlEO+Rlvj/XL+bQzWHhA7nj67GMzsW1g6/Z7v3CSm/fScG4tNXCfHOn9uubijxnq6Qsyrz27wGQhKkbSHqb6M/Mv72Ub5yGfUiOXyJA/g7COGlVkZep+vrCJ/oQmdkGscA3ieozp/Rrt1XrbqnMBsw9SGFn9Gu0KRxddoh2NiAx0T6e8v+DjR+yx79WP6DDD353XpZ7bDpMG6mffxatYtokED/fxZ8VUUoJWbqo/kEMwhh8tqnsf1wWSOp/Flyj7zZ+jD1IZW2KMXk6/LarjnEDfG+TUi8zm44l6acMxJ+Bz5wt+D0rju+Gsx5OuOhcSqw9L7blyqzd9jQ8xCTvl7bINZOTa/RujrbJ6fQeICD56bXsMN0nP4N8LwUfHY2Ow8BBZ8v2Ql8a5M4pjGv5+ecxtdC91L5/30+pj3d7ou/x5Q47d5g3GtCQkH/yYOz7kr+jAt8TkUfE+Oz4ODyfPy5633fRbmQDy5DFOd85f5Nb/aQ9vQ+sOkwbrb5tVdzbp4LYMG+vup/nYK0Labqo/sSzCHHK6qeR7XVyRzPI2vUvZ5a+IYpja0wnH3evJ1VQ33XOLG+GB8DHsLeeP7llUKvqxMfFmZMPO97Ao1lt69bKrN56/8rx89/5d0NpXBzqPvMfnel7/nyve+mX+bO8TfrZ1Pmvzd2rb8/YkwL/3dd+BbmJdvs9+oY930++d8j9WnyOI79d99z6xTusTnUJpywr+xx3fW+XU88/exq5wsSljS39NzrPoVWXyn/rf8Gt9BZ59DacoJ9MM8nD/49wSDmeOQntOGqQ0tjtWAIouv0VbQKTm2KE05GYyPdfcGj8d95DC1+b10MExQZPE12m16/5Lvu/jeZLTup5lBi6XuflpBp3SJz6E05YTv7XFtxp/zjNb1KBgmKbLUXY8q6JQu8TmUppzwe9t193jbZI5D0/0OtDhWkxVZfI22gk7pEp9DacoJ9MM83ANuTXzbZY4D32djXbShxbFyiiy+RltBp3SJz6E05WQ78n37WN+W+J6YOQ4F6WBdtKHFsZqiyOJrtBV0Spf4HEpTTqAf5u0Q69sT35Myx6EgHayLNrQ4Vl6RxddoK+iULvE5lKacQD/M2zHWdyC+ocxxKEgH66I9RHkAw1RFFl+jraBTusTnUJpywn9fdnWs70h8ZeY4FKSDddGGFsdqmiKLr9FW0Cld4nMoTTmBfpi3JtZXE99OmeNQkA7WRRtaHKvpiiy+RltBp3SJz6E05QT6Yd7Osb6G+J6cOQ4F6WBdtKHFsZqhyOJrtBV0Spf4HEpTTqAf5u0S6zsT31Myx6EgHayLNrQ4VlsosvgabQWd0iU+h9KUE+iHebvG+i7E99TMcShIB+uiDS2O1ZaKLL5GW0GndInPoTTlBPph3m6xvivxPS1zHArSwbpoQ4tjtZUii6/RVtApXeJzKE05gX6Yt3us70Z8T88ch4J0sC7a0OJYzVRk8TXaCjqlS3wOpSkn0A/z9oj13YlvOHMcCtLBunskGhyreYosvkZbQafk2KI05YRZ9srLslNg2XMELHsRy955Waq/E9PNvGZYYx/ih69g9zTeJd/2yctR7fO9O5vHFG3mM9bxzeqob49RZuHz4Z56LDv5Gm0FndIlPofSdK7jnOwb63sT3zPy8lU52TdhQRtaHKuuIouv0VbQKV3icyhNOWGW/bOyrKm+B7bfCFj4f4QckJWl97p1IGmBCzqexnkfHJiXo9qTByT+o818xmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxmqsxpqf1VHfvqPM4olhPzWWNdXfNEq1FXwuXeJzKE3fE+GcHBTrBxDfwXn5qpwclLCgDS2OVVeRxddoK+iULvE5lKacMMuhWVl6f6vukBGwHEosh2Vl6X2P6HDSAhd0PI3zPjg8L0e1Jw9L/Eeb+YzVWI3VWI3VWI3VWI3VWI3VWI3VWI3VWI3VWI3VWMcKq6O+g0aZhd+LP0SNpfe/JVJtBZ9Ll/gcStP77JyTI2L9MOJ7Zl6+KidHJCxoQ4tj1VVk8TXaCjqlS3wOpSknzHJUXpbqb5scOQKWo4jl6LwsQ2GNY0gLXNDxNM774Ji8HNWePDrxH23mM9bxzeqo74hRZuFz15F6LNXfIUm1FXRKl/gcStN5iXNybKwfTXzPystX5eTYhAVtaHGsuoosvkZbQad0ic+hNOWEWY7PytL7v63HjYDleGI5IStL73XrRNICF3Q8jfM+ODEvR7UnT0j8R5v5jNVYjdVYjdVYjdVYjXV8szrqO3aUWfhe5jg1lt7/i0+1FXwuXeJzKE33KZyTk2L9BOI7OS9flZOTEha0ocWx6iqy+BptBZ3SJT6H0pQTZjk1K0vvPvaUEbCcSiynZWXp3ceeTlqnxEfoeBrnfXB6Xo5qT56W+I828xmrsRqrsRqrsRqrsRrr+GZ11HfSKLPwvcwpaiy9+9hUW8Hn0iU+h9J0n8I5WRvrpxHfGXn5qpysTVjQhhbHqqvI4mu0FXRKl/gcSlNOmOUsBZYzR8ByFrGcnZeluo89h7TABR1P47wPzsnLUe3JsxP/0Wa+scLqqG/tKLPwMXamHkvpa7Q1dFzicyhNxw/n5NxYP5v4np2Xr8rJuQkL2tDiWHUVWXyNtoJO6RKfQ2nKCbOcr8By3ghYzieWdXlZqvPretICF3Q8jfM+WJ+Xo9qT6xL/0Wa+scLqqO/cUWbhY+w8PZbq/Jpqa+i4xOdQmo4fzsmGWF9HfM/Jy1flZEPCgja0OFZdRRZfo62gU7rE51CacgL9MO+CWN9AfBdmjkNBOlgXbWhxrLqKLL5GW0GndInPoTTlBPph3sZYv4D4Lsoch4J0sC7a0OJYOUUWX6OtoFO6xOdQmnJyEfl+caxvJL7nZo5DQTpYF21ocaymKLL4Gm0FndIlPofSlBPoh3mXxPrFxPe8zHEoSAfrog0tjpVXZPE12go6pUt8DqUpJ9AP8y6N9UuI77LMcShIB+uifRnlAQxTFVl8jbaCTukSn0Npygn0w7zLY/1S4nt+5jgUpIN10YYWx2qaIouv0VbQKV3icyhNOYF+mHdFrF9OfC/IHIeCdLAu2tDiWE1XZPE12go6pUt8DqUpJ9AP866M9SuI76rMcShIB+uiDS2O1QxFFl+jraBTcmxRmnIC/TDv6li/kvhemDkOBelgXbShxbHqKrL4Gm0FndIlPofSlBPoh3nXxPrVxPeizHEoSAfrog0tjlVXkcXXaCvolC7xOZSmnEA/zLs21q8hvhdnjkNBOlgXbWhxrLqKLL5GW0GndInPoTTlBPph3nWxfi3xvSRzHArSwbpoQ4tj1VVk8TXaCjqlS3wOpSkn0A/zro/164jvpZnjUJAO1kUbWhyrriKLr9FW0Cld4nMoTTlhlhvyslTfBb8xrnU96bwsc2wL0sG6aEOL43+DIouv0VbQKV3icyhNeYZ+mHdTrN9IfC/PHIeCdLAu2tDiWN2gyOJrtBV0Spf4HEpTTqAf5t0c6zcR3ysyx6EgHayLNrQ4VjcosvgabQWd0iU+h9KUE+iHebfE+s3E98rMcShIB+uiDS2OVVeRxddoK+iULvE5lKacQD/MuzXWbyG+V2WOQ0E6WBdtaHGsuoosvkZbQad0ic+hNOUE+mHebbF+K/G9OnMcCtLBumhDi2PVVWTxNdoKOqVLfA6lKSfQD/Nuj/XbiO81meNQkA7WRRtaHKuuIouv0VbQKV3icyhNOYF+mHdHrN9OfHdmjkNBOlgXbWhxrLqKLL5GW0GndInPoTTlBPph3l2xfgfxvTZzHArSwbpoQ4tj1VVk8TXaCjqlS3wOpSkn0A/z7o71u4jvnsxxKEgH66INLY5VV5HF12gr6JQcW5SmnNwTH8O818X63cT3d5njUJAO1kUbWhyrriKLr9FW0Cld4nMoTTmBfpj3+lh/HfH9feY4FKSDddGGFseqq8jia7QVdEqX+BxKU06gH+a9IdZfT3z/kDkOBelgXbShxbHqKrL4Gm0FndIlPofSlBPoh3lvjPU3EN+bMsehIB2siza0OFZdRRZfo62gU7rE51CacgL9MO/Nsf5G4vvHzHEoSAfrog0tjlVXkcXXaCvolC7xOZSmnEA/zHtLrL+Z+N6aOQ4F6WBdtKHFseoqsvgabQWd0iU+h9KUE+iHeW+L9bcQ39szx6EgHayLNrQ4Vl1FFl+jraBTusTnUJpyAv0w7x2x/jbi+6fMcShIB+uiDS2OVVeRxddoK+iULvE5lKacQD/Me2esv4P4/jlzHArSwbpoQ4tj1VVk8TXaCjqlS3wOpSknzPLuvCzV/3Z41whY3k0s78nLMhTWeC9pgQs6nsZ5H7w3L0e1J9+T+I828xnr+GZ11PfOUWbhc9e79Fiq/+2QaivolC7xOZSm8xLn5N5Yfw/xvS8vX5WTexMWtKHFseoqsvgabQWd0iU+h9KUE2b5QFaWsvoe1PtHwPIBYrkvK0vvdeuDpAUu6Hga533wwbwc1Z68L/EfbeYzVmM1VmM1VmM1VmM1VmM1VmM1VmM1VmM1VmM1VmMdK6yO+u4dZRZ+L/79aixl9TfdU20Fn0uX+BxK0/vsnJMPxfp9xPfhvHxVTj6UsKANLY5VV5HF12gr6JQu8TmUppwwy0ezsvT+N9lHRsDyUWL5WFaW3ucwHyctcEHH0zjvg4/n5aj25McS/9FmPmM1VmM1VmM1VmM1VmMd36yO+j40yix8L/MRNZbe/yZLtRV8Ll3icyhF0h6mOufkE7H+MeL7l7x8VU4+kbCgDS2OVVeRxddoK+iULvE5lKacMMunsrL07mM/OQKWTxHLp7Oy9O5jP0Na4IKOp3HeB5/Jy1HtyU8n/qPNfMZqrMZqrMZqrMZqrMY6vlkd9X1ilFn4XuaTaiy9+9hUW8Hn0iU+h9J0n8I5+Wysf5r4PpeXr8rJZxMWtKHFseoqsvgabQWd0iU+h9KUE2b5QlaW3n3s50fA8gVi+WJWlt597JdIC1zQ8TTO++BLeTmqPfnFxH+0mc9YjdVYjdVYjdVYjdVYxzero77PjjIL38t8Xo2ldx+baiv4XLrE51Ca7lM4J1+O9S8S37/m5aty8uWEBW1ocay6iiy+RltBp3SJz6E05YRZvpqXpfq7ZF8ZActXieVreVmq+9ivkxa4oONpnPfB1/NyVHvya4n/aDOfsY5vVkd9Xx5lFj53fUWPpfq7ZKm2gk7pEp9DaTovcU6+EetfI75/y8tX5eQbCQva0OJYdRVZfI22gk7pEp9DacoJs3wrL0v1uvXNEbB8i1i+nZelet36DmmBCzqexnkffCcvR7Unv534jzbzGev4ZnXU941RZuFz1zf1WKrXrVRbQad0ic+hNJ2XOCffjfVvE9+/5+WrcvLdhAVtaHGsuoosvkZbQad0ic+hNOWEWb6vwPK9EbB8n1h+kJelet26n7TABR1P47wP7s/LUe3JHyT+o30/9Y8VVkd93x1lFj7GvqfHUvoabQ0dji1K0/Fzf3wM8x6I9R8Q33/k5aty8kDCgja0OFZdRRZfo62gU7rE51CacgL9MO+Hsf4A8f1n5jgUpIN10YYWx6qryOJrtBV0Spf4HEpTTqAf5v0o1n9IfP+VOQ4F6WBdtKHFseoqsvgabQWd0iU+h9KUE+iHeT+O9R8R339njkNBOlgXbWhxrLqKLL5GW0GndInPoTTlBPph3k9i/cfE9z+Z41CQDtZFG1ocq64ii6/RVtApXeJzKE05gX6Y99NY/wnx/W/mOBSkg3XRhhbHqqvI4mu0FXRKl/gcSlNOoB/m/SzWf0p8/5c5DgXpYF20ocWx6iqy+BptBZ3SJT6H0pQT6Id5P4/1nxHfLzLHoSAdrIs2tDhWXUUWX6M9kfoy6ZRhzV9mZnfEjNKU51+Sf7/Ky1K9Z/AgaYELOp7GZxHHg5ljUpAm1kX7QWJB6dOLyeqmXPyqhmVui1hmtIhlaotYXItYJraIpb9FLPNaxDKnRSzTWsQypUUsk1rEMtAiltktYpnVIpbpLWLxLWKZ3CKWCS1iKUaZxXUefV/gaPzn1Idr5F9QX1/Neni9x/NDvOdMffQ62r6zzjC1oTWFGB5sAcuEFrFMbhGLbxHL9BaxzGoRy+wWsQy0iGVSi1imtIhlWotY5rSIZV6LWPpbxDKxRSyuRSxTW8Qyo0Usc1vE0vc4sIQ1f5N5zbDPf93ZvDTdU/yG/PttXpahsObvMq8Z1niI+OEr2D2N/458eyhznAvSxLpoP0QsKH16cW68Z/xtDcvcFrHMaBHL1BaxuBaxTGwRS3+LWOa1iGVOi1imtYhlSotYJrWIZaBFLLNbxDK9RSy+RSyTW8QyoUUsxSiz/LXPAjDO7/HjuvTX1NdXsx5eY/H89LOAhx4n31lnmNrQ4s8CHmoBy4QWsUxuEYtvEcv0FrHMbhHLQItYJrWIZUqLWKa1iGVOi1jmtYilv0UsE1vE4lrEMrVFLDNaxDK3RSx9NSy/z8uyE18nd4iJyzDVf08sf8jLUr1X/sfMa4Y1/kT88BXsnsb/SL79KS9HlfM/dDaPKdrMZ6zjmzW/7prq7/ezbihNxziz/DkrS+94/AtpgQs6nsY5F3/Jy1Hl4s+J/2gzn7Eaq7Eaq7Eaq7Eaq7Eaq7Eaq7Eaq7Eaq7Eaq7Eaq7Eaq7Eaq7Eaq7Eaq7Eaq7HmZ82vW1bfj2DdUJq+H8EsD2dl6X0/gsXBBR1P45wL9A3n4ahy8XBnc/8frguOsRqrsRqrsRqrsRqrsRqrsRqrsRqrsRqrsRqrsRrrGGFV0K1+Y8u6JLEZS6eGpcjLUr2/3Efi4IKOp3HORZ9CLopic//RZj5jHd+s+XVXV5/3FMkB2HQ8Mku/wvE4QOLg6qdcDNTkYkAhF/1JLtBmPmM1VmM1VmM1VmM1VmMd36z5dXvX56xbxWDz5mbX58wyIW8MquvziSTeH+sTKBcTa3IxUSEXE5JcoM18xmqsxmqsxmqsxmqsxjq+WRV0S5fohpI0N7s+Z5ZJeVmq6/PJJA6uSZSLyTW5mKyQi0lJLtBmvrHCqqBb7ZtJI9g3zOIU9s0UEgeXo1xMqcnFFIVcuCQXaDPfWGF11NfX2dSH8X7q87FvgPqm4lxKfdNoH6BvOo4d6puBPUx9W8S+edS3Zezj//eyVez7A/XNjH1/pr5Zse9h6psd+wqKwRz4S31zk9eJ0DcvOQeEvvlJLkPfE2gcjwsQe+pbSHsCfYti31TqWxz7plHfktg3nfoGY98M6ltaw/dIrokTuea9gVx76kOup1Ifcj2N+pDr6dSHXM/g/Rf7tqA+xGhL6kOMtqI+xGgm9SFGs6gPMZpNfYjRHOrbIvbNpb4tY9886tsq9s2nvpmxj3OP/52+gPrwP1QW8v6LfYt4/8W+xbz/Yt8S3n+xb5D6nhD7ltJxF2K6ANzxcQo9d2Fn0/zFSV/I75JYH46PQ4+tVOcn6GBdtJcQ3yLEgVgGM7M40kRpeq0bJJaleVmq17plpAUu6Hgan0UcyzLHpCBNrIs28y2tYcUeD/lbnDwvsK54HFix11co6y5PdBclui6JVyhNe2s58a7MyzsUdFfR+sOksYj6t1aI0yryvSAN9PdzHSd2el4oOFeBOeyvFTXP4/qyZI6n8RXKPq8kjmFqQyu8vj7kNzFk3p9VvlckDGgvov6VNfFaQfHCOI5lR+PzKYaZ9+vqJn7OJxiWKrL4Gm2Ow8IWxAEMy6gPz1M8r9Tyza6JFfrw3LD/9yeuCZm5+BoWpencC/1wnYpT0IUb119w6llnHHPBORvPKGiNgWS9Plqnj8b6k+dN6jyaIZvDM0msL4oPRMcmRvHgHC6yfXQ0XDSHi+RwURwugsNFb7jInUmMN8bHcNEREhkuWsNFargoDQdgODmHF92wCcPJJZwswgXBYKd3YIZNGTZhSH7YFOFkH06E24htK7ad2PZiTxTbQexJYjuGmIitFivF1ojtJLaz2JPFdhF7itiuYk8V203saWK7iz1dbI8Y2z3F9hLbW6wrto/YvmLPENuv09uEB4gdKHaQ2MFih4gdKnaY2OFiR4g9U+xIsaPEjhY7RuxYsWeJHSd2vNgJYieKnSR2stgpYqeKnSZ2uthasTPEzhQ7S+xssXPEzhV7tth5YueLrRNbL7ZB7DliF4hdKLZR7CKxi8WeK3aJ2PPELhW7TOxyseeLXSH2ArErxa4Su1rshWLXiL1I7FqxF4tdJ/YSsevFXip2Q6eX65eJ3ST2crGbxV4hdovYK8VuFXuV2G1irxa7Xew1YneI3Sl2l9hrxe4Wu6ezacPzxr8zNrDH9l+39oxLBtdftHFw/ZmDp62/aN3aC/8f932/Y1ggAgA=",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "compute_note_hash_and_nullifier",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "contract_address",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "storage_slot",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "preimage",
          "type": {
            "kind": "array",
            "length": 2,
            "type": {
              "kind": "field"
            }
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 4,
          "type": {
            "kind": "field"
          }
        }
      ],
      "bytecode": "H4sIAAAAAAAA/+2d+ZddVZXH361KFdk5gHZs28Z5nofkJLQirYRWpBVpQVqRVkSBgCBOCCoyhHkKhJkQEkKYh4iEBkwDEsIkpBEREUlA2uFv6B/6x845db6db586HOot9/a9WnX2Wlk5+95X5/v57n3ufXVvvbo1p9frdb2JGN36b1ZvcmD/ovT/vL8s5nd6c82z5ByZJpyjipyBbaRn2/9ZBnXVZhxTrikYcXyNb/233dZ/s7f+E6r1k7Mn/g/bxtK20d62bfj6Edo2mtVAepN7OE7jRTq+/Lh+3eeNUT24LvCzY/IyW9mLpH5wdFm+iMazqa6iyzIvzDcnzbUd6ThdnXgenpP5Q+7ofzCIIYsraBvoeMk8h6j12ZH37dN4DvHtoFyHjnQwL/IdiGkOcVmxuIK2gY6XzHOIWk92IO87pvH2xPcK5Tp0pIN5kUOLayWGLK6gbaDjJfMcotaTV5D3V6bxjsT3N8p16EgH8yKHFtdKDFlcQdtAx0vmOUStJ8wyV5clvke9Ks31StL5W+XadqSDeZFDi+s/15DFFbQNdLxknkPU+gz98HWvTuNXEd/fKdehIx3MixxaXKu5hiyuoG2g4yXzHKLWE+iHr3tNGr+a+P5euQ4d6WBe5NDiWs01ZHEFbQMdL5nnELWeQD983U5p/Brie61yHTrSwbzIocW1EkMWV9A20PGSeQ5R68lryfvr0ngn4nu9ch060sG8yKHFtRJDFlfQNtDxknkOUevJ68n7G9L4dcT3RuU6dKSDeZFDi2slhiyuoG2g4yXzHKLWkzeS9zel8RuI783KdehIB/MihxbXSgxZXEHbQMdzbRG1nryZvL8ljd9EfG9VrkNHOpgXObS4VmLI4graBjpeMs8haj15K3l/Wxq/hfjerlyHjnQwL3Joca3EkMUVtA10vGSeQ9R68nby/o40fhvxvVO5Dh3pYF7k0OJaiSGLK2gb6HjJPIeo9eSd5P1dafwO4nu3ch060sG8yKHFtRJDFlfQNtDxknkOUevJu8n7e9L4XcT3XuU6dKSDeZFDi2slhiyuoG2g4yXzHKLWk/eS9/el8XuI7/3KdehIB/MihxbXSgxZXEHbQMdL5jlErSfvJ+8fSOP3Ed8HlevQkQ7mRQ4trpUYsriCtoGOl8xziFpPPkjeP5TGHyC+ecp16EgH8yKHFtdKDFlcQdtAx0vmOUStJ8zidVkWBpb5fbB4YlmgyxJtLiQtcEHH0X5eBwt1OeKaXJD5R858jXVmswpt+9CAWfjcNd+OZaEraBvoeMk8h6idl7gnO6fxAuL7B12+2JOdMxbk0OJaiSGLK2gb6HjJPIeo9YRZPqLKsiD+3PrDfbB8hFh2UWWZeN/6KGmBCzqO9vM6+KguR1yTu2T+kTNfY22sjbWxNtbG2lgba2NtrI21sTbWxtpYG2tjbayNtbE21sbaWBtrY22sjbWxNtbG2lj1WYW27TxgFv4syYfNWBbMcwVtA89eMs8hap8T4Z7smsa7EN8/6vLFnuyasSCHFtdKDFlcQdtAx0vmOUStJ8zycVUWHz9H9LE+WD5OLLupskx8joi1wAUdR/t5HSzS5YhrcrfMf+61sTbWxtpYG2tjbayNtbE21sbaWBtrY22sjbWxNtbG2linE6vQtl0HzML34j9mxuLjz2FybQPPnmuLqN1nxzh83e5pvBvx/ZMuX+zJ7pk+cmhxrcSQxRW0DXS8ZJ5D1HrCLJ/UZYnPIflEHyyfJJY9dFniz2E+RVrggo6j/bwOPqXLEdfkHpl/5MzXWGc2q9C23QfMwueuT9ixxOeQ5NoGOl4yzyFq5yXuyZ5pvAfx/bMuX+zJnhkLcmhxrcSQxRW0DXS8ZJ5D1HrCLJ9RZZkfPz/w6T5YPkMse6myTLxvfZa0wAUdR/t5HXxWlyOuyb0y/8iZr7E21sbaWBtrY22sjbWxzmxWoW17DpiFr2U+bcYyP95/zbUNPHvJPIeoXadwT/ZO472I7190+WJP9s5YkEOLayWGLK6gbaDjJfMcotYTZtlHlWXiOvZzfbDsQyz7qrJMXMd+nrTABR1H+3kdfF6XI67JfTP/yJmvsTbWxtpYG2tjbayNtbHObFahbXsPmIWvZT5nxjJxHZtrG3j2knkOUbtO4Z7sl8b7Et+/6vLFnuyXsSCHFtdKDFlcQdtAx0vmOUStJ8zyRQOWL/TB8kVi2V+XJV7Hfom0wAUdR/t5HXxJlyOuyf0z/8iZb7qwCm3bb8AsfIx9wY7Fu4K2hY5knkPUjh/uyQFpvD/x/ZsuX+zJARkLcmhxrcSQxRW0DXS8ZJ5D1HrCLF8xYPlyHyxfIZYDdVni+fWrpAUu6Djaz+vgq7occU0emPlHznzThVVo2wEDZuFj7Mt2LPH8mmtb6EjmOUTt+OGeHJTGBxLf13T5Yk8OyliQQ4trJYYsrqBtoOO5tohaT75G3r+exgcR38HKdehIB/MihxbXSgxZXEHbQMdL5jlErScHk/dD0vjrxHeoch060sG8yKHFtRJDFlfQNtDxknkOUevJoeR9cRofQnyHKdehIx3MixxaXCsxZHEFbQMdL5nnELWeHEbeD0/jxcT3DeU6dKSDeZFDi2slhiyuoG2g4yXzHKLWk2+Q9yPS+HDiO1K5Dh3pYF7k0OJaiSGLK2gb6HjJPIeo9eRI8v7NND6C+I5SrkNHOpgXObS4VmLI4graBjpeMs8haj05irx/K42/SXzfVq5DRzqYFzm0uFZiyOIK2gY6XjLPIWo9+TZ5/04af4v4vqtch450MC9yaHGtxJDFFbQNdLxknkPUevJd8v69NP4O8R2tXIeOdDAvcmhxrcSQxRW0DXS8ZJ5D1HpyNHn/fhp/j/iOUa5DRzqYFzm0uFZiyOIK2gY6XjLPIWo9OYa8H5vG3ye+HyjXoSMdzIscWlwrMWRxBW0DHS+Z5xC1nvyAvP8wjY8lvh8p16EjHcyLHFpcKzFkcQVtAx0vmecQtZ78iLwfl8Y/JL4fK9ehIx3MixxaXCsxZHEFbQMdL5nnELWe/Ji8H5/GxxHfCcp16EgH8yKHFtdqriGLK2gb6HjJPIeo9QT64etOTOPjie8k5Tp0pIN5kUOLazXXkMUVtA10vGSeQ9R6Av3wdUvS+ETiO1m5Dh3pYF7k0OJazTVkcQVtAx3PtUXUenJy+j983SlpvIT4TlWuQ0c6mBc5tLhWYsjiCtoGOl4yzyFqPTmVvJ+WxqcQ3+nKdehIB/MihxbXSgxZXEHbQMdL5jlErSenk/cz0vg04jtTuQ4d6WBe5NDiWokhiytoG+h4yTyHqPXkTPJ+VhqfQXxnK9ehIx3MixxaXCsxZHEFbQMdL5nnELWenE3ez0njs4jvXOU6dKSDeZFDi2slhiyuoG2g4yXzHKLWk3PJ+9I0Pof4zlOuQ0c6mBc5tLhWYsjiCtoGOl4yzyFqPTmPvJ+fxkuJb5lyHTrSwbzIocW1EkMWV9A20PGSeQ5R68ky8n5BGp9PfBcq16EjHcyLHFpcKzFkcQVtAx0vmecQtZ5cSN4vSuMLiO9i5Tp0pIN5kUOLayWGLK6gbaDjJfMcotaTi8n7JWl8EfFdqlyHjnQwL3Joca3EkMUVtA10vGSeQ9R6cil5vyyNLyG+y5Xr0JEO5kUOLa6VGLK4graBjpfMc4haTy4n78vT+DLiu0K5Dh3pYF7k0OJaiSGLK2gb6HjJPIeo9eQK8r4ijZcT35XKdehIB/MihxbXSgxZXEHbQMdL5jlErSdXkveVabyC+FYp16EjHcyLHFpcKzFkcQVtAx0vmecQtZ6sIu9XpfFK4lutXIeOdDAvcmhxrcSQxRW0DXS8ZJ5D1HqymrxfncZXEd8a5Tp0pIN5kUOLayWGLK6gbaDjubaIWk/WEMu1uizx7zBc0wfLtcRynS5L/P2+60kLXNBxtJ/XwfW6HHFNXpf5R858jXVmswptu3rALHzuusaOJf4dhlzbQMdL5jlE7bzEPbkhja8jvht1+WJPbshYkEOLayWGLK6gbaDjJfMcotYTZrlZlcXH51fe1AfLzcRyiyrLxPvWraQFLug42s/r4FZdjrgmb8n8I2e+xtpYG2tjbayNtbE21sbaWBtrY22sjbWxNtbG2lgba2OdLqxC224YMAvfi7/JjMXH56/n2gaevWSeQ9Tus3NP1qbxLcT3E12+2JO1GQtyaHGtxJDFFbQNdLxknkPUesIsP1Vlmfg7Yrf1wfJTYrldlWXi5zDrSAtc0HG0n9fBOl2OuCZvz/wjZ77G2lgba2NtrI21sTbWxjqzWYW2rR0wC1/L3GbGMvF3xHJtA89eMs8hatcp3JM70vh24vt3Xb7YkzsyFuTQ4lqJIYsraBvoeMk8h6j1hFnuUmWZuI69sw+Wu4jlblWWievYn5EWuKDjaD+vg5/pcsQ1eXfmHznzNdbG2lgba2NtrI21sTbWmc0qtO2OAbPwtcydZiwT17G5toFnL5nnELXrFO7J+jS+m/j+Q5cv9mR9xoIcWlwrMWRxBW0DHS+Z5xC1njDLvaosE9ex9/TBci+x3KfKMnEd+3PSAhd0HO3ndfBzXY64Ju/L/CNnvsbaWBtrY22sjbWxNtbGOrNZhbatHzALX8vcY8YycR2baxt49pJ5DlG7TuGe3J/G9xHfBl2+2JP7Mxbk0OJaiSGLK2gb6HjJPIeo9YRZNuqyxOeSPdAHy0ZieVCXJV7HPkRa4IKOo/28Dh7S5Yhr8sHMP3Lma6wzm1Vo2/0DZuFz1wN2LPG5ZLm2gY6XzHOI2nmJe/JwGj9IfI/o8sWePJyxIIcW10oMWVxB20DHS+Y5RK0nzPILXZb4vvVoHyy/IJbHdFni+9bjpAUu6Djaz+vgcV2OuCYfy/wjZ77GOrNZhbY9PGAWPnc9ascS37dybQMdL5nnELXzEvdkUxo/Rnz/qcsXe7IpY0EOLa6VGLK4graBjpfMc4haT5jllwYsT/TB8ktieVKXJb5v/Yq0wAUdR/t5HfxKlyOuyScz/8iZb7qwCm3bNGAWPsaesGPxrqBtoSOZ5xC144d78lQaP0l8v9bliz15KmNBDi2ulRiyuIK2gY6XzHOIWk9+Td6fTuOniO83ynXoSAfzIocW10oMWVxB20DHS+Y5RK0nvyHvz6Tx08T3W+U6dKSDeZFDi2slhiyuoG2g4yXzHKLWk9+S92fT+Bni+51yHTrSwbzIocW1EkMWV9A20PGSeQ5R68nvyPtzafws8W1WrkNHOpgXObS4VmLI4graBjpeMs8haj3ZTN63pPFzxPe8ch060sG8yKHFtRJDFlfQNtDxknkOUevJ8+T9hTTeQny/V65DRzqYFzm0uFZiyOIK2gY6XjLPIWo9+T15fzGNXyC+/1KuQ0c6mBc5tLhWYsjiCtoGOl4yzyFqPWGWPxqw/KEPlj8Sy590WeK9hj+TFrig42g/r4M/63LENfmnzD9y5psurELbXhwwCx9jf7BjifcaSnUYp3GIWVv//ff4No4XlDlCTfj8voQYoDVKr1kxexvX/6QXzqH93D/l9+94/PH7NzShM6dXfp/W/h4yzPFcgWMzcZS+h7P4vr+f7zH5GsTiurCfaxC+RrW4b9DPNSrfw7C4r9TPPQy+x2Vx37Gfe1x8D9TiZwj93AOFPv/sgY8ti58xPZGxIOefMYHhBUMWV9DmOjw7BHUAw5YB1uGZIagDGEYGWIenh6AOYBgdYB2eGoI6gGHWX7kO47RNSSf+vijm558/bTKoLXQwL/JNVFswPGHI4graBjpeMs8hau+HzKL8+Y/4fTZ//gNc/HkX7Of3PeXPpMV18HjmHznzTZV1y4BZLXpl8LnEvj//w59LfFSZZfutc2zX29ZXzJ/XdoR4+POd2M/XiI9kr7P67G8/nzN9iFge1GWJx/PG3uT68OfRsZ/fpzbqclQ/A76Rtk+V9ZEBsxro9v2Z8Y3E8oAyC4499ADz49gDJx97/DtB2M/H3obsdVa/L9bP7ybx765ZPNfi3t7k+vDvMGI/XzPoPuuj/nuDzDdV1g0DZjXo1cIw5z26c8a1yDUNUVuL/Pua2s+ewfGMvmL+vLZ8PPNzpLCfj+f12esC990GNWSOl6shP7NI99mvE8fznYX6QMfRfr72vVOXIx4jd2X+kTPfVFnXD5jVoFcLwpwWzyHu59m//BziO5RZcDyjr5g/ry0fz/xca+zn43ld9rrArft3gPp/vjb/HaDbdFni8fyT3uT6QMfRfr7WtfjbVLdl/pEz31RZtwyY1UA3rpt+/n4Us6xVZsGxlz+DH98bg5OPvVtojP187N2avS5w36zMLb3+/kbbzcRyky5LPPZu7E2uD3Qc7efr0ht1OeJ6vinzj5z5psp664BZDXTjumHdELV1wyw3KLPg2EMPMD+OPXDysXcdjbGfj73rs9cF7muVuSXjeLkaXkss1+iyxGNvTW9yfaDjaD9fl67R5Yjr+ZrMP/I1tH2qrNcPmNVAN64b1g1RWzdriOVqZRYce+gB5sc1JDj52LuKxtjPx97q7HWOXs/XJVfpeplfq2GJZcsQsWwYIpbVQ8QyPkQs64aIZWyIWLoBs0hv8vlTaD9/vn4k+9pQx/Wzt+1flbaPFOZZ1Zv8Ova+0sA76yyiHFpziGHVELCMDRHLuiFiGR8iltVDxLJhiFi2DBHL+gLLlbos8ZphRW9b4Dx3JXGAaQVxXKFckzDH8gLHFcQB/eXEcbkuhw9zXFbguJw4oH8ZcVyqy7FAMo4QtffBS4nlEl2WuEYuJi1wQcfR/pXEcbEuRzxuLsn8I2e+qbKumEasywfMarCuDgtzXqQ7Z7yu5pqGqB03F5G/C3VZFuC6Gn3F/Hlt+bp6GY2xn8/FFxReh/Es2o/3sVHav1P6HneH3ktfjy/TrUH1e3doMcvKIWLZMEQsK4aIZfUQsYwPEcu6IWIZGyKWbsAsL3VvAPtX0rbz03gFbRspzIfPgeD1od4b6B7CeWk730NYmsajBb3zClxLC1/LtcTXLEr/z/vLItaSdRZRDi2+17B0CFjGhohl3RCxjA8Ry+ohYlkxRCwbhohl5RCxrC+wnKvL4vkc3SMmjkU0hn74nj6c5nHeXpbx889Vz9ZljtfhZxETNM+m2p2Txvw6jMP1AfqM143S/kPp+iDwn6nLH+/xnFHgP5P4wcKvO4P4V2SeRmn/kRn/6br88Z4Mc4WorRnoB5bTdFniWji1N7lG0HG0n79fP1WXIx7Tp2X+kTPfVFnPn0asywbMarGuwpyn6M4Zz7Vc0xC14+YU8neyLsv/3ZNBXzF/XtsR4jmJxtjP59wl2esC94m63PHvCjBH72VqeCKxnKDLEs89x/cm1wc6jvbzPZTjdTniMXJC5h85802Vdf00Yl03jViXDJhVaNtJtG0kYw7nhdJzj0I8T2O+t9Lr/f9nFPGzDrfoeo3nUeYIUTsH8GebntNlmRd0+dlDi0iDdZ/V1Z3Pul36lz+PdZTGa2dvqwc/ywg9BnPo4ebC63j8fPY1/IyUzcaeX+pZq9AK3xuvIa+bC9zjxI39/PsPFs/U4md7jWds/KwrfsaYxfODX6p+/PzgFwv10n6+lyto8zPiUK/8GXGzdDkW8D1MRO1cAv2wxLZP48MXH7PPsQcfdcQhey0+rqM5MO9oYV6+HzqWvY7Pydi3XfI/pus/nktn9abuf6zsf7/Fhxy9+JjM/6zM60jBP/seTz4V/c0DK2IW1TME3yOcTRyiyzEfWjmHEMdsGmPfHGLCNpfx8nrhr0VdHXnOe6tmEAujSzCjyeRYwTQaPbu3rQAh/hfoM2ZGzYkBAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "constructor",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "admin_",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "getAdmin",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/7VTWw7CIBBcKA/RxH8/vUH1BD2DN2hi46eJev9YIpOOiP4ImzRLgc7Mzm61iCh5RSdLqC/rfcqO9oaU+z/DEVctTDtj2IQVSLNOeZtq0XV5j5uCf448rsRz4N4wrhBXkPceYq/LvAi0xln0bkfnpvAN7prCPa7dNqideQZ6B9eaNBjS4upq6SOGlyU64oIOaPLkk8/0cg885Raz06In3HvErxkF/2p+8M/cH9fbeJlO03hWBJGPlCYYXvPYw34eTdzFmZdPidX8yHFVlmM8Aa2/RE2EBQAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "getData",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 3,
          "type": {
            "kind": "field"
          }
        }
      ],
      "bytecode": "H4sIAAAAAAAA/9WYS2/CMAzH0zel0PF+nartjgrsuEM/A7vtVgm2C6wS7bSvv6XE2n9dhJBwVc0SxI2D/bOTQIIjhDDEWSzQUagvUW18m6wMPl+xAYyW0k2l25DDi2p9ZUdxQU+YuFz+usUOsPrATPmEym7zxl37UFsB9RaaugmIL1kcXpayri6vz0fpwwN+ypXYA7C70Hq8HOW+cMTvmtIz8l3LajbMWtf8t3h9lusbayrl0vpuQX4+M0tHsdC8kv9qbXFuA16GWProQL4Uk+K01as6jnQb7AFwhryc5RrsKl+GeoUVFhn3roa4IcwLclAsC8Y8qLYL9aA61lkblAR0ioUsRsMsvvi753ywt6HPrHxWzsEW7D2lmxo/Pc04zL1fQ+4YJ4HnPuRmVPiaZGlrWAa8LOV3zFD8CM3PADiIaQgcI+aaSB9jDccIOCj+GDgmvBxr6WOq4ZgAB8WfAseMl2PjVzikXNq/M2CZ87KUa2QBsYiL4gRg7wPHgpej3DfzSv70jHzXsg7/Eeu4YVYf+qbQZ1aYPcVo8TJuajjDlnsM76ZSLu0xii/PnfSbnRfZKX3bb/fpDq/A5BavwkKj4/GSrjQ29OHxUoonNH8NJKqNb5MVJiA0CdBdXjfuXrVPqn0+1yXKD1kRxdH793t6OGSf+90yQlseHT/yIsqL9FREr6fsGK2WXwPzHpEMEQAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "getSize",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/7VTWw7CIBBcKA/RxH8/vUG9Qc/gDZrY+Gmi3j+WyKQjoj+FTZqlQGdmZ7daRJS8o5Ml1I/1MWVHe0PK/cpwxFUL084YNmEF0qxT3qdadF3e067gnyOPa/FwbxhXiCvIZw+x12VeBFrjLHp3oHNT+AZ3TeEe124b1M48A72Da0saDGlxdbX0EcPLEh1xQQc0efLJZ3q5B55yi9lp0RPuPeLfjIJ/Mz/4Zx7P2328TudpvCiCyEdKEwyveexhP48m7uLMy7fEan7kuCrLMV4lLa+7hAUAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "mint",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "proj",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "tr",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "now",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_data",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::HistoricBlockData",
                "fields": [
                  {
                    "name": "private_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "blocks_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "mint_private",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "read_all_notes",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "n",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "transfer",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "recipient",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    }
  ],
  "events": [],
  "debug": {
    "debugSymbols": [
      "",
      "",
      "",
      "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",
      "",
      "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",
      "",
      "eJzN1s1qwkAUhuF7mXUoc34mmcmtlC6ktSCILdWd5N6rbZIJesjgotNvpcIxvDnqM57d/uN1c9p9HI6uPztx/fPZHT83h+ur42nzdXK9b9z28HZ5HBr3vttvXU9DczdFIr4dJy/POc7TEqxxpUDTuLLocvylcQpTEmBKWpiSDqYkwpQkmBLyOCmEk8I4KTjOEg60hCMt4VBLONYSDraEoy3jaMs42jKOtoyjLeNoyzjaMo62jKMt42jLONoKjraCo63gaCs42kpNbYV0TlHvb1NqaltIqaltIaWmtoWUmtoWUmpqu56iNbUtpNTUtpBSU9tCSk1tCyk42iqOtoqjreJoqzjaKo62wdRWWcP4JuVOVoMiyzgaF5MdG6NMUzlrmkf1p8Ok9h86TGcf6Uj5/6H3cT2EUjuXeJ/Wr+un+0ucP8Xut9okGb7a1Bu+2oQevto8E5bV4mkdHoopu9Mur38/3KVJs7gYVUsojdNo8HlvwVxG8HFKCCHfYvIP/sjNUwlhGYHmZbR+fRmceBwV7vJV44OrME/FP1tFkvkrmmS5imuKeSpWSYm3KfHJ3kuYdh4oL7K9bHIYvgGUd5DA"
    ],
    "fileMap": {
      "1": {
        "source": "mod address_note;\nmod public_payload;\n\ncontract PN721 {\n    use dep::std::option::Option;\n    use dep::value_note::{\n        balance_utils,\n        utils::{increment, decrement},\n        value_note::{VALUE_NOTE_LEN, ValueNote, ValueNoteMethods},\n    };\n    use dep::aztec::{\n        context::{PrivateContext, PublicContext, Context},\n        note::{\n            note_header::NoteHeader,\n            note_getter_options::NoteGetterOptions,\n            utils as note_utils,\n        },\n        state_vars::{map::Map, set::Set, public_state::PublicState, singleton::Singleton},\n        types::type_serialization::{\n            field_serialization::{FieldSerializationMethods, FIELD_SERIALIZED_LEN},\n            bool_serialization::{BoolSerializationMethods, BOOL_SERIALIZED_LEN},\n            aztec_address_serialization::{AztecAddressSerializationMethods, AZTEC_ADDRESS_SERIALIZED_LEN},\n        },\n        types::address::{AztecAddress},\n        selector::compute_selector,\n        \n    };\n \n    use crate::address_note::{AddressNote, AddressNoteMethods, ADDRESS_NOTE_LEN};\n    use crate::public_payload::{PublicPayload, PUBLIC_PAYLOAD_SERIALIZED_LEN, PublicPayloadSerializationMethods};\n    \n    struct Storage {\n        // the attributes of the private NFT\n        size: PublicState<Field, FIELD_SERIALIZED_LEN>,\n        admin: PublicState<AztecAddress, AZTEC_ADDRESS_SERIALIZED_LEN>,\n        owners: Map<Set<AddressNote, ADDRESS_NOTE_LEN>>,\n        nft_data: Map<PublicState<PublicPayload, PUBLIC_PAYLOAD_SERIALIZED_LEN>>,\n        \n        \n    }\n\n    impl Storage {\n        fn init(context: Context) -> pub Self {\n            Storage {\n                size: PublicState::new(context, 1, FieldSerializationMethods),\n                admin: PublicState::new(context, 2, AztecAddressSerializationMethods),\n                owners: Map::new(\n                    context,\n                    3, // Storage slot\n                    |context, slot| {\n                        Set::new(context, slot, AddressNoteMethods)\n                    },\n                ),\n                nft_data: Map::new(\n                    context,\n                    4,\n                    |context, slot| {\n                        PublicState::new(context, slot, PublicPayloadSerializationMethods)\n                    },\n                ),\n\n                \n               \n            }\n        }\n    }\n\n    // Constructs the contract and sets `size` of the collection to 0 at init\n    #[aztec(private)]\n    fn constructor( \n       admin_: AztecAddress \n    )  {\n        let selector = compute_selector(\"_init((Field))\");\n        context.call_public_function(context.this_address(), selector, [admin_.address]);\n       \n             \n        \n        \n    }\n\n    #[aztec(public)]\n    internal fn _init(admin_: AztecAddress) {\n        storage.admin.write(admin_);\n        storage.size.write(0);\n    }\n\n   \n\n    #[aztec(public)]\n    fn mint(proj: Field, tr: Field, now: Field) -> Field{\n        \n        let new_size = storage.size.read() + 1;\n        storage.size.write(new_size);\n\n        let pub_payload = PublicPayload {\n            project: proj,\n            tier: tr,\n            creation: now,\n        };\n\n        storage.nft_data.at(new_size).write(pub_payload);\n\n        \n        new_size\n        \n\n    }\n\n    #[aztec(public)]\n    internal fn _check_id_match(id: Field) {\n        let size = storage.size.read();\n        assert (size == id);\n    }\n\n    // Mints nft with said specifications and assigns ownership to owner\n    #[aztec(private)]\n    fn mint_private( \n        id: Field\n    ) {\n        let selector = compute_selector(\"_check_id_match(Field)\");\n        context.call_public_function(context.this_address(), selector, [id]);\n        \n        let owner = context.msg_sender();\n        let mut owner_note = AddressNote::new(id, owner);\n        storage.owners.at(owner).insert(&mut owner_note);\n        //storage.owners.at(new_size).replace(&mut owner_note);\n        \n        \n    }\n\n    // Transfers nft with given `id` from msg_sender to  `recipient`.\n    #[aztec(private)]\n    fn transfer(\n        id: Field, \n        recipient: Field,\n    )  {\n        \n        \n        let mut recipient_note = AddressNote::new(id, recipient);\n        \n        \n        storage.owners.at(recipient).insert(&mut recipient_note);\n        //storage.owners.at(id).replace(&mut recipient_note);\n    }\n\n    #[aztec(private)]\n    fn read_all_notes(n: Field){\n        let owner = context.msg_sender();\n        let options = NoteGetterOptions::new();\n        let owner_notes = storage.owners.at(owner);\n        let maybe_notes = owner_notes.get_notes(options);\n        //let selector = compute_selector(\"_check_id_match(Field)\");\n        //context.call_public_function(context.this_address(), selector, [maybe_notes.len()]);\n        assert (maybe_notes[n - 1].is_some());\n\n    }\n\n\n    unconstrained fn getData(\n        id: Field,\n    ) -> [Field; 3] {\n        \n        let pub_payload = storage.nft_data.at(id).read();\n        \n        let tier = pub_payload.tier;\n        let creation = pub_payload.creation;\n        let project = pub_payload.project;\n        \n        let res = [project, tier, creation];\n\n        res\n        \n        \n    }\n\n    unconstrained fn getAdmin() -> Field {\n        let admin = storage.admin.read();\n        admin.address\n    }\n\n    unconstrained fn getSize() -> Field {\n        let s = storage.size.read();\n        s\n    }\n\n\n    // Computes note hash and nullifier.\n    // Note 1: Needs to be defined by every contract producing logs.\n    // Note 2: Having it in all the contracts gives us the ability to compute the note hash and nullifier differently for different kind of notes.\n    unconstrained fn compute_note_hash_and_nullifier(contract_address: Field, nonce: Field, storage_slot: Field, preimage: [Field; ADDRESS_NOTE_LEN]) -> [Field; 4] {\n        let note_header = NoteHeader::new(contract_address, nonce, storage_slot);\n        note_utils::compute_note_hash_and_nullifier(AddressNoteMethods, note_header, preimage)\n    }\n}\n",
        "path": "/home/ritik/hello_aztec/nft_standards/contracts/pn721/src/main"
      },
      "4": {
        "source": "mod poseidon;\n\n#[foreign(sha256)]\npub fn sha256<N>(_input : [u8; N]) -> [u8; 32] {}\n\n#[foreign(blake2s)]\npub fn blake2s<N>(_input : [u8; N]) -> [u8; 32] {}\n\npub fn pedersen<N>(input : [Field; N]) -> [Field; 2] {\n    pedersen_with_separator(input, 0)\n}\n\n#[foreign(pedersen)]\npub fn pedersen_with_separator<N>(_input : [Field; N], _separator : u32) -> [Field; 2] {}\n\n#[foreign(hash_to_field_128_security)]\npub fn hash_to_field<N>(_input : [Field; N]) -> Field {}\n\n#[foreign(keccak256)]\npub fn keccak256<N>(_input : [u8; N], _message_size: u32) -> [u8; 32] {}\n\n// mimc-p/p implementation\n// constants are (publicly generated) random numbers, for instance using keccak as a ROM.\n// You must use constants generated for the native field\n// Rounds number should be ~ log(p)/log(exp)\n// For 254 bit primes, exponent 7 and 91 rounds seems to be recommended\nfn mimc<N>(x: Field, k: Field, constants: [Field; N], exp : Field) -> Field {\n    //round 0\n    let mut t = x + k;\n    let mut h = t.pow_32(exp);\n    //next rounds\n    for i in 1 .. constants.len() {\n        t = h + k + constants[i];\n        h = t.pow_32(exp);\n    };\n    h + k\n}\n\nglobal MIMC_BN254_ROUNDS = 91;\n\n//mimc implementation with hardcoded parameters for BN254 curve.\npub fn mimc_bn254<N>(array: [Field; N]) -> Field {\n    //mimc parameters\n    let exponent = 7;\n    //generated from seed \"mimc\" using keccak256 \n    let constants: [Field; MIMC_BN254_ROUNDS] = [\n        0, \n        20888961410941983456478427210666206549300505294776164667214940546594746570981,\n        15265126113435022738560151911929040668591755459209400716467504685752745317193,\n        8334177627492981984476504167502758309043212251641796197711684499645635709656,\n        1374324219480165500871639364801692115397519265181803854177629327624133579404,\n        11442588683664344394633565859260176446561886575962616332903193988751292992472,\n        2558901189096558760448896669327086721003508630712968559048179091037845349145,\n        11189978595292752354820141775598510151189959177917284797737745690127318076389,\n        3262966573163560839685415914157855077211340576201936620532175028036746741754,\n        17029914891543225301403832095880481731551830725367286980611178737703889171730,\n        4614037031668406927330683909387957156531244689520944789503628527855167665518,\n        19647356996769918391113967168615123299113119185942498194367262335168397100658,\n        5040699236106090655289931820723926657076483236860546282406111821875672148900,\n        2632385916954580941368956176626336146806721642583847728103570779270161510514,\n        17691411851977575435597871505860208507285462834710151833948561098560743654671,\n        11482807709115676646560379017491661435505951727793345550942389701970904563183,\n        8360838254132998143349158726141014535383109403565779450210746881879715734773,\n        12663821244032248511491386323242575231591777785787269938928497649288048289525,\n        3067001377342968891237590775929219083706800062321980129409398033259904188058,\n        8536471869378957766675292398190944925664113548202769136103887479787957959589,\n        19825444354178182240559170937204690272111734703605805530888940813160705385792,\n        16703465144013840124940690347975638755097486902749048533167980887413919317592,\n        13061236261277650370863439564453267964462486225679643020432589226741411380501,\n        10864774797625152707517901967943775867717907803542223029967000416969007792571,\n        10035653564014594269791753415727486340557376923045841607746250017541686319774,\n        3446968588058668564420958894889124905706353937375068998436129414772610003289,\n        4653317306466493184743870159523234588955994456998076243468148492375236846006,\n        8486711143589723036499933521576871883500223198263343024003617825616410932026,\n        250710584458582618659378487568129931785810765264752039738223488321597070280,\n        2104159799604932521291371026105311735948154964200596636974609406977292675173,\n        16313562605837709339799839901240652934758303521543693857533755376563489378839,\n        6032365105133504724925793806318578936233045029919447519826248813478479197288,\n        14025118133847866722315446277964222215118620050302054655768867040006542798474,\n        7400123822125662712777833064081316757896757785777291653271747396958201309118,\n        1744432620323851751204287974553233986555641872755053103823939564833813704825,\n        8316378125659383262515151597439205374263247719876250938893842106722210729522,\n        6739722627047123650704294650168547689199576889424317598327664349670094847386,\n        21211457866117465531949733809706514799713333930924902519246949506964470524162,\n        13718112532745211817410303291774369209520657938741992779396229864894885156527,\n        5264534817993325015357427094323255342713527811596856940387954546330728068658,\n        18884137497114307927425084003812022333609937761793387700010402412840002189451,\n        5148596049900083984813839872929010525572543381981952060869301611018636120248,\n        19799686398774806587970184652860783461860993790013219899147141137827718662674,\n        19240878651604412704364448729659032944342952609050243268894572835672205984837,\n        10546185249390392695582524554167530669949955276893453512788278945742408153192,\n        5507959600969845538113649209272736011390582494851145043668969080335346810411,\n        18177751737739153338153217698774510185696788019377850245260475034576050820091,\n        19603444733183990109492724100282114612026332366576932662794133334264283907557,\n        10548274686824425401349248282213580046351514091431715597441736281987273193140,\n        1823201861560942974198127384034483127920205835821334101215923769688644479957,\n        11867589662193422187545516240823411225342068709600734253659804646934346124945,\n        18718569356736340558616379408444812528964066420519677106145092918482774343613,\n        10530777752259630125564678480897857853807637120039176813174150229243735996839,\n        20486583726592018813337145844457018474256372770211860618687961310422228379031,\n        12690713110714036569415168795200156516217175005650145422920562694422306200486,\n        17386427286863519095301372413760745749282643730629659997153085139065756667205,\n        2216432659854733047132347621569505613620980842043977268828076165669557467682,\n        6309765381643925252238633914530877025934201680691496500372265330505506717193,\n        20806323192073945401862788605803131761175139076694468214027227878952047793390,\n        4037040458505567977365391535756875199663510397600316887746139396052445718861,\n        19948974083684238245321361840704327952464170097132407924861169241740046562673,\n        845322671528508199439318170916419179535949348988022948153107378280175750024,\n        16222384601744433420585982239113457177459602187868460608565289920306145389382,\n        10232118865851112229330353999139005145127746617219324244541194256766741433339,\n        6699067738555349409504843460654299019000594109597429103342076743347235369120,\n        6220784880752427143725783746407285094967584864656399181815603544365010379208,\n        6129250029437675212264306655559561251995722990149771051304736001195288083309,\n        10773245783118750721454994239248013870822765715268323522295722350908043393604,\n        4490242021765793917495398271905043433053432245571325177153467194570741607167,\n        19596995117319480189066041930051006586888908165330319666010398892494684778526,\n        837850695495734270707668553360118467905109360511302468085569220634750561083,\n        11803922811376367215191737026157445294481406304781326649717082177394185903907,\n        10201298324909697255105265958780781450978049256931478989759448189112393506592,\n        13564695482314888817576351063608519127702411536552857463682060761575100923924,\n        9262808208636973454201420823766139682381973240743541030659775288508921362724,\n        173271062536305557219323722062711383294158572562695717740068656098441040230,\n        18120430890549410286417591505529104700901943324772175772035648111937818237369,\n        20484495168135072493552514219686101965206843697794133766912991150184337935627,\n        19155651295705203459475805213866664350848604323501251939850063308319753686505,\n        11971299749478202793661982361798418342615500543489781306376058267926437157297,\n        18285310723116790056148596536349375622245669010373674803854111592441823052978,\n        7069216248902547653615508023941692395371990416048967468982099270925308100727,\n        6465151453746412132599596984628739550147379072443683076388208843341824127379,\n        16143532858389170960690347742477978826830511669766530042104134302796355145785,\n        19362583304414853660976404410208489566967618125972377176980367224623492419647,\n        1702213613534733786921602839210290505213503664731919006932367875629005980493,\n        10781825404476535814285389902565833897646945212027592373510689209734812292327,\n        4212716923652881254737947578600828255798948993302968210248673545442808456151,\n        7594017890037021425366623750593200398174488805473151513558919864633711506220,\n        18979889247746272055963929241596362599320706910852082477600815822482192194401,\n        13602139229813231349386885113156901793661719180900395818909719758150455500533,\n    ];\n\n    let mut r = 0;\n    for elem in array {\n        let h = mimc(elem, r, constants, exponent);\n        r = r + elem + h;\n    }\n    r\n}\n",
        "path": "std/hash"
      },
      "16": {
        "source": "struct GrumpkinScalar {\n    low: Field,\n    high: Field,\n}\n\nimpl GrumpkinScalar {\n    fn new(low: Field, high: Field) -> Self {\n        // TODO: check that the low and high value fit within the grumpkin modulus\n        GrumpkinScalar { low, high }\n    }\n}\n\nglobal GRUMPKIN_SCALAR_SERIALIZED_LEN: Field = 2;\n\nfn deserialize_grumpkin_scalar(fields: [Field; GRUMPKIN_SCALAR_SERIALIZED_LEN]) -> GrumpkinScalar {\n    GrumpkinScalar { low: fields[0], high: fields[1] }\n}\n\nfn serialize_grumpkin_scalar(scalar: GrumpkinScalar) -> [Field; GRUMPKIN_SCALAR_SERIALIZED_LEN] {\n    [scalar.low, scalar.high]\n}\n",
        "path": "std/grumpkin_scalar"
      },
      "17": {
        "source": "use crate::grumpkin_scalar::GrumpkinScalar;\nuse crate::scalar_mul::fixed_base_embedded_curve;\n\nfn grumpkin_fixed_base(scalar: GrumpkinScalar) -> [Field; 2] {\n    // TODO: this should use both the low and high limbs to do the scalar multiplication\n    fixed_base_embedded_curve(scalar.low, scalar.high)\n}\n",
        "path": "std/grumpkin_scalar_mul"
      },
      "35": {
        "source": "use crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    GENERATOR_INDEX__FUNCTION_ARGS,\n    HISTORIC_BLOCK_DATA_LENGTH,\n    CONTRACT_DEPLOYMENT_DATA_LENGTH,\n    CALL_CONTEXT_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH,\n    CONTRACT_STORAGE_READ_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__FUNCTION_DATA,\n    GENERATOR_INDEX__PUBLIC_DATA_READ,\n    GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST,\n    GENERATOR_INDEX__CALL_CONTEXT,\n    GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n};\n\nuse crate::oracle::debug_log;\nuse crate::types::vec::BoundedVec;\nuse crate::types::point::Point;\n\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n}\n// docs:end:public-global-variables\n\nimpl PublicGlobalVariables {\n    fn serialize(self) -> [Field; 4] {\n        [self.chain_id, self.version, self.block_number, self.timestamp]\n    }\n}\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    deployer_public_key: Point,\n    constructor_vk_hash : Field,\n    function_tree_root : Field,\n    contract_address_salt : Field,\n    portal_contract_address : Field,\n}\n// docs:end:contract-deployment-data\n\nimpl ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.deployer_public_key.x,\n            self.deployer_public_key.y,\n            self.constructor_vk_hash,\n            self.function_tree_root,\n            self.contract_address_salt,\n            self.portal_contract_address,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)[0]\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    block_data: HistoricBlockData,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : Field,\n    storage_contract_address : Field,\n    portal_contract_address : Field,\n    function_selector: Field,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment: bool,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender,\n            self.storage_contract_address,\n            self.portal_contract_address,\n            self.function_selector,\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)[0]\n    }\n}\n\n// docs:start:historic-block-data\nstruct HistoricBlockData {\n    private_data_tree_root : Field,\n    nullifier_tree_root : Field,\n    contract_tree_root : Field,\n    l1_to_l2_messages_tree_root : Field,\n    blocks_tree_root: Field,\n    public_data_tree_root: Field,\n    global_variables_hash: Field,\n}\n// docs:end:historic-block-data\n\nimpl HistoricBlockData {\n    // NOTE: this order must match the order in `private_circuit_public_inputs.hpp`\n    pub fn serialize(self) -> [Field; HISTORIC_BLOCK_DATA_LENGTH] {\n        [\n            self.private_data_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.blocks_tree_root,\n            self.public_data_tree_root,\n            self.global_variables_hash,\n        ]\n    }\n\n    pub fn empty() -> Self {\n        Self { private_data_tree_root: 0, nullifier_tree_root: 0, contract_tree_root: 0, l1_to_l2_messages_tree_root: 0, blocks_tree_root: 0, public_data_tree_root: 0, global_variables_hash: 0 }\n    }\n}\n\nstruct FunctionData {\n    function_selector: Field,\n    is_internal: bool,\n    is_private: bool,\n    is_constructor: bool,\n}\n\nimpl FunctionData {\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator([\n            self.function_selector,\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ], GENERATOR_INDEX__FUNCTION_DATA)[0]\n    }\n}\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    read_requests: [Field; crate::abi::MAX_READ_REQUESTS_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    nullified_commitments: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    // Explore introducing a new type like uint256 (similar to Point), so it's more explicit that\n    // we're talking about a single number backed by two field elements.\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    contract_deployment_data: ContractDeploymentData,\n    chain_id: Field,\n    version: Field,\n}\n\nimpl PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0); \n        fields.push(self.call_context.hash());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.nullified_commitments);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.contract_deployment_data.hash());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        dep::std::hash::pedersen_with_separator(fields.storage, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)[0]\n    }\n\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n        fields.storage\n    }\n}\n\nstruct ContractStorageRead {\n    storage_slot: Field,\n    value: Field,\n}\n\nimpl ContractStorageRead {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.value]\n    }\n\n    pub fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)[0]\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, value: 0 }\n    }\n}\n\nstruct ContractStorageUpdateRequest {\n    storage_slot: Field,\n    old_value: Field,\n    new_value: Field,\n}\n\nimpl ContractStorageUpdateRequest {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH] {\n        [self.storage_slot, self.old_value, self.new_value]\n    }\n\n    pub fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST)[0]\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, old_value: 0, new_value: 0 }\n    }\n}\n\n\nstruct PublicCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    contract_storage_update_requests: [ContractStorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_read: [ContractStorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; crate::abi::MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_log_preimages_length: Field,\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicCircuitPublicInputs {\n    \n    pub fn hash(self) -> Field {\n        let mut inputs: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0);\n        inputs.push(self.call_context.hash());\n        inputs.push(self.args_hash);\n        inputs.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            inputs.push(self.contract_storage_update_requests[i].hash());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            inputs.push(self.contract_storage_read[i].hash());\n        }\n        inputs.push_array(self.public_call_stack);\n        inputs.push_array(self.new_commitments);\n        inputs.push_array(self.new_nullifiers);\n        inputs.push_array(self.new_l2_to_l1_msgs);\n\n        inputs.push_array(self.unencrypted_logs_hash);\n        inputs.push(self.unencrypted_log_preimages_length);\n        inputs.push_array(self.block_data.serialize());\n        inputs.push(self.prover_address);\n\n        dep::std::hash::pedersen_with_separator(inputs.storage, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)[0]\n    }\n\n    pub fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.push_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.push_array(self.contract_storage_read[i].serialize());\n        }\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_data.serialize());\n        fields.push(self.prover_address);\n        fields.storage\n    }\n}\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hasher {\n    pub fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n\n    pub fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\npub fn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = dep::std::hash::pedersen_with_separator(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS)[0];\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        dep::std::hash::pedersen_with_separator(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)[0]\n    }\n}\n",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/abi"
      },
      "36": {
        "source": "use dep::std::hash;\nuse crate::constants_gen::GENERATOR_INDEX__CONTRACT_ADDRESS;\n\npub fn compute_address(pub_key_x: Field, pub_key_y: Field, partial_address: Field) -> Field {\n  hash::pedersen_with_separator([pub_key_x, pub_key_y, partial_address], GENERATOR_INDEX__CONTRACT_ADDRESS)[0]\n}",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/address"
      },
      "38": {
        "source": "use crate::constants_gen::{\n    EMPTY_NULLIFIED_COMMITMENT,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_READ_REQUESTS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH,\n};\n\nuse crate::abi;\n\nuse crate::abi::{\n    hash_args,\n    CallContext,\n    ContractDeploymentData,\n    HistoricBlockData,\n    FunctionData,\n    PrivateCircuitPublicInputs,\n    PublicCircuitPublicInputs,\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// l1 to l2 messaging\nuse crate::messaging::process_l1_to_l2_message;\nuse crate::private_call_stack_item::PrivateCallStackItem;\nuse crate::public_call_stack_item::PublicCallStackItem;\n\nuse crate::types::{\n    vec::BoundedVec,\n    point::Point,\n};\n\nuse crate::utils::arr_copy_slice;\n\nuse crate::oracle::{\n    arguments,\n    call_private_function::call_private_function_internal,\n    public_call::call_public_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n    context::get_portal_address,\n};\n\nuse dep::std::option::Option;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: abi::PrivateContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<Field, MAX_READ_REQUESTS_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n    nullified_commitments: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    block_data: HistoricBlockData,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: abi::PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            read_requests: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n            nullified_commitments: BoundedVec::new(0),\n\n            block_data: inputs.block_data,\n\n            private_call_stack: BoundedVec::new(0),\n            public_call_stack: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn finish(self) -> abi::PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = abi::PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            read_requests: self.read_requests.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            nullified_commitments: self.nullified_commitments.storage,\n            private_call_stack: self.private_call_stack.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            encrypted_logs_hash: encrypted_logs_hash,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            encrypted_log_preimages_length: encrypted_log_preimages_length,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.block_data,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version,\n        };\n        priv_circuit_pub_inputs\n    }\n\n    pub fn push_read_request(&mut self, read_request: Field) {\n        self.read_requests.push(read_request);\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    // We never push a zero nullified_commitment as zero is used to indicate the end\n    // of a field array in private kernel. This routine transparently replaces a\n    // zero value into the special placeholder: EMPTY_NULLIFIED_COMMITMENT.\n    pub fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n        let mut non_zero_nullified = nullified_commitment;\n        if (non_zero_nullified == 0) {\n            non_zero_nullified = EMPTY_NULLIFIED_COMMITMENT;\n        }\n        self.nullified_commitments.push(non_zero_nullified);\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, content: Field) \n    // docs:end:context_message_portal\n    {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(\n        &mut self,\n        msg_key: Field,\n        content: Field,\n        secret: Field\n    ) \n    // docs:end:context_consume_l1_to_l2_message\n    {\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, self.this_address(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let fields = call_private_function_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PrivateCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PrivateCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                // TODO handle the offsets as a variable incremented during extraction?\n                args_hash: fields[12],\n                return_values: arr_copy_slice(fields, [0; RETURN_VALUES_LENGTH], 13),\n                read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 17),\n                new_commitments: arr_copy_slice(fields, [0; MAX_NEW_COMMITMENTS_PER_CALL], 49),\n                new_nullifiers: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 65),\n                nullified_commitments: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 81),\n                private_call_stack: arr_copy_slice(fields, [0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL], 97),\n                public_call_stack: arr_copy_slice(fields, [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL], 101),\n                new_l2_to_l1_msgs: arr_copy_slice(fields, [0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL], 105),\n                encrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 107),\n                unencrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 109),\n                encrypted_log_preimages_length: fields[111],\n                unencrypted_log_preimages_length: fields[112],\n                block_data: HistoricBlockData {\n                    // Must match order in `private_circuit_public_inputs.hpp`\n                    private_data_tree_root : fields[113],\n                    nullifier_tree_root : fields[114],\n                    contract_tree_root : fields[115],\n                    l1_to_l2_messages_tree_root : fields[116],\n                    blocks_tree_root : fields[117],\n                    public_data_tree_root: fields[118],\n                    global_variables_hash: fields[119],\n                },\n                contract_deployment_data: ContractDeploymentData {\n                    deployer_public_key: Point::new(fields[120], fields[121]),\n                    constructor_vk_hash : fields[122],\n                    function_tree_root : fields[123],\n                    contract_address_salt : fields[124],\n                    portal_contract_address : fields[125],\n                },\n                chain_id: fields[126],\n                version: fields[127],\n            },\n            is_execution_request: fields[128] as bool,\n        };\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        assert(item.is_execution_request == false);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.private_call_stack.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field,\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PublicCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                args_hash: fields[12],\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [ContractStorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_read: [ContractStorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_commitments: [0; MAX_NEW_COMMITMENTS_PER_CALL],\n                new_nullifiers: [0; MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs:[0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash:[0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                block_data: HistoricBlockData::empty(),\n                prover_address: 0,\n            },\n            is_execution_request: true,\n        };\n\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n        \n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.public_call_stack.push(item.hash());\n    }\n}\n\nuse crate::abi::{\n    ContractStorageRead,\n    ContractStorageUpdateRequest\n};\n\nstruct PublicContext {\n    inputs: abi::PublicContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<ContractStorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_read: BoundedVec<ContractStorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, crate::abi::MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    block_data: HistoricBlockData,\n    prover_address: Field,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: abi::PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = ContractStorageRead::empty();\n        let empty_storage_update = ContractStorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_read: BoundedVec::new(empty_storage_read),\n            public_call_stack: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            \n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            block_data: inputs.block_data,\n            prover_address: 0,\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    pub fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    pub fn finish(self) -> abi::PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = abi::PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_read: self.contract_storage_read.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_data: self.inputs.block_data,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n    }\n\n    pub fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.block_data.l1_to_l2_messages_tree_root, this, msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = abi::hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            args_hash,\n        )\n    }\n\n    pub fn call_public_function_no_args(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            0,\n        )\n    }\n\n}\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    pub fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/context"
      },
      "45": {
        "source": "use dep::std::option::Option;\nuse crate::abi::PublicContextInputs;\nuse crate::context::{\n    PrivateContext,\n    PublicContext,\n};\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n    utils::compute_inner_note_hash,\n};\nuse crate::oracle::notes::{notify_created_note, notify_nullified_note};\nuse crate::constants_gen::EMPTY_NULLIFIED_COMMITMENT;\n\npub fn create_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note: &mut Note,\n    note_interface: NoteInterface<Note, N>,\n) {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    let set_header = note_interface.set_header;\n    set_header(note, header);\n    let inner_note_hash = compute_inner_note_hash(note_interface, *note);\n\n    let serialize = note_interface.serialize;\n    let preimage = serialize(*note);\n    assert(notify_created_note(storage_slot, preimage, inner_note_hash) == 0);\n\n    context.push_new_note_hash(inner_note_hash);\n}\n\npub fn create_note_hash_from_public<Note, N>(\n    context: &mut PublicContext,\n    storage_slot: Field,\n    note: &mut Note,\n    note_interface: NoteInterface<Note, N>,\n) {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    let set_header = note_interface.set_header;\n    set_header(note, header);\n    let inner_note_hash = compute_inner_note_hash(note_interface, *note);\n\n    context.push_new_note_hash(inner_note_hash);\n}\n\npub fn destroy_note<Note, N>(\n    context: &mut PrivateContext,\n    note: Note,\n    note_interface: NoteInterface<Note, N>,\n) {\n    let mut nullifier = 0;\n    let mut nullified_commitment: Field = EMPTY_NULLIFIED_COMMITMENT;\n    let compute_nullifier = note_interface.compute_nullifier;\n    nullifier = compute_nullifier(note);\n\n    // We also need the note commitment corresponding to the \"nullifier\"\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n    // `nullified_commitment` is used to inform the kernel which pending commitment\n    // the nullifier corresponds to so they can be matched and both squashed/deleted.\n    // nonzero nonce implies \"persistable\" nullifier (nullifies a persistent/in-tree\n    // commitment) in which case `nullified_commitment` is not used since the kernel\n    // just siloes and forwards the nullier to its output.\n    if (header.is_transient) {\n        // TODO(1718): Can we reuse the note commitment computed in `compute_nullifier`?\n        nullified_commitment = compute_inner_note_hash(note_interface, note);\n    }\n    assert(notify_nullified_note(nullifier, nullified_commitment) == 0);\n\n    context.push_new_nullifier(nullifier, nullified_commitment)\n}",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/note/lifecycle"
      },
      "46": {
        "source": "use dep::std::option::Option;\nuse crate::constants_gen::{\n    MAX_READ_REQUESTS_PER_CALL,\n    GET_NOTE_ORACLE_RETURN_LENGTH,\n    GET_NOTES_ORACLE_RETURN_LENGTH,\n    MAX_NOTES_PER_PAGE,\n    VIEW_NOTE_ORACLE_RETURN_LENGTH,\n};\nuse crate::context::PrivateContext;\nuse crate::note::{\n    note_getter_options::{NoteGetterOptions, Select, Sort, SortOrder},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_or_nullify,\n};\nuse crate::oracle;\nuse crate::types::vec::BoundedVec;\n\nfn check_note_header<Note, N>(\n    context: PrivateContext,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    note: Note,\n) {\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n    let contract_address = context.this_address();\n    assert(header.contract_address == contract_address);\n    assert(header.storage_slot == storage_slot);\n}\n\nfn check_note_fields<N>(\n    fields: [Field; N],\n    selects: BoundedVec<Option<Select>, N>,\n) {\n    for i in 0..selects.len {\n        let select = selects.get_unchecked(i).unwrap_unchecked();\n        assert(fields[select.field_index] == select.value, \"Mismatch return note field.\");\n    }\n}\n\nfn check_notes_order<N>(fields_0: [Field; N], fields_1: [Field; N], sorts: BoundedVec<Option<Sort>, N>) {\n    for i in 0..sorts.len {\n        let sort = sorts.get_unchecked(i).unwrap_unchecked();\n        let eq = fields_0[sort.field_index] == fields_1[sort.field_index];\n        let lt = fields_0[sort.field_index] as u120 < fields_1[sort.field_index] as u120;\n        if sort.order == SortOrder.ASC {\n            assert(eq | lt, \"Return notes not sorted in ascending order.\");\n        } else if !eq {\n            assert(!lt, \"Return notes not sorted in descending order.\");\n        }\n    }\n}\n\npub fn get_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n) -> Note {\n    let note = get_note_internal(storage_slot, note_interface);\n\n    check_note_header(*context, storage_slot, note_interface, note);\n\n    let note_hash_for_read_request = compute_note_hash_for_read_or_nullify(note_interface, note);\n\n    context.push_read_request(note_hash_for_read_request);\n    note\n}\n\npub fn get_notes<Note, N, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>,\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n    let opt_notes = get_notes_internal(storage_slot, note_interface, options);\n    let mut num_notes = 0;\n    let mut prev_fields = [0; N];\n    for i in 0..opt_notes.len() {\n        let opt_note = opt_notes[i];\n        if opt_note.is_some() {\n            let note = opt_note.unwrap_unchecked();\n            let serialize = note_interface.serialize;\n            let fields = serialize(note);\n            check_note_header(*context, storage_slot, note_interface, note);\n            check_note_fields(fields, options.selects);\n            if i != 0 {\n                check_notes_order(prev_fields, fields, options.sorts);\n            }\n            prev_fields = fields;\n\n            let note_hash_for_read_request = compute_note_hash_for_read_or_nullify(note_interface, note);\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1410): test to ensure\n            // failure if malicious oracle injects 0 nonce here for a \"pre-existing\" note.\n            context.push_read_request(note_hash_for_read_request);\n\n            num_notes += 1;\n        };\n    };\n    if options.limit != 0 {\n        assert(num_notes <= options.limit, \"Invalid number of return notes.\");\n    }\n    opt_notes\n}\n\nunconstrained fn get_note_internal<Note, N>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n) -> Note {\n    let placeholder_note = [Option::none()];\n    let placeholder_fields = [0; GET_NOTE_ORACLE_RETURN_LENGTH];\n    oracle::notes::get_notes(\n        storage_slot,\n        note_interface,\n        0,\n        [],\n        [],\n        [],\n        [],\n        1, // limit\n        0, // offset\n        placeholder_note,\n        placeholder_fields,\n    )[0].unwrap() // Notice: we don't allow dummies to be returned from get_note (singular).\n}\n\nunconstrained fn get_notes_internal<Note, N, FILTER_ARGS>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>,\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n    let (num_selects, select_by, select_values, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_READ_REQUESTS_PER_CALL];\n    let placeholder_fields = [0; GET_NOTES_ORACLE_RETURN_LENGTH];\n    let opt_notes = oracle::notes::get_notes(\n        storage_slot,\n        note_interface,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        placeholder_opt_notes,\n        placeholder_fields,\n    );\n\n    let filter = options.filter;\n    let filter_args = options.filter_args;\n    filter(opt_notes, filter_args)\n}\n\nunconstrained pub fn view_notes<Note, N>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteViewerOptions<Note, N>,\n) -> [Option<Note>; MAX_NOTES_PER_PAGE] {\n    let (num_selects, select_by, select_values, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTES_PER_PAGE];\n    let placeholder_fields = [0; VIEW_NOTE_ORACLE_RETURN_LENGTH];\n    oracle::notes::get_notes(\n        storage_slot,\n        note_interface,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        placeholder_opt_notes,\n        placeholder_fields,\n    )\n}\n\nunconstrained fn flatten_options<Note, N>(\n    selects: BoundedVec<Option<Select>, N>,\n    sorts: BoundedVec<Option<Sort>, N>,\n) -> (u8, [u8; N], [Field; N], [u8; N], [u2; N]) {\n    let mut num_selects = 0;\n    let mut select_by = [0; N];\n    let mut select_values = [0; N];\n    for i in 0..selects.len {\n        let select = selects.get(i);\n        if select.is_some() {\n            select_by[num_selects] = select.unwrap_unchecked().field_index;\n            select_values[num_selects] = select.unwrap_unchecked().value;\n            num_selects += 1;\n        };\n    };\n\n    let mut sort_by = [0; N];\n    let mut sort_order = [0; N];\n    for i in 0..sorts.len {\n        let sort = sorts.get(i);\n        if sort.is_some() {\n            sort_by[i] = sort.unwrap_unchecked().field_index;\n            sort_order[i] = sort.unwrap_unchecked().order;\n        };\n    };\n\n    (num_selects, select_by, select_values, sort_by, sort_order)\n}",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/note/note_getter"
      },
      "48": {
        "source": "use dep::std::hash::{pedersen, pedersen_with_separator};\nuse crate::constants_gen::{GENERATOR_INDEX__UNIQUE_COMMITMENT, GENERATOR_INDEX__SILOED_COMMITMENT};\n\npub fn compute_inner_hash(storage_slot: Field, note_hash: Field) -> Field {\n    // TODO(#1205) Do we need a generator index here?\n    pedersen([storage_slot, note_hash])[0]\n}\n\npub fn compute_siloed_hash(contract_address: Field, inner_note_hash: Field) -> Field {\n    let inputs = [contract_address, inner_note_hash];\n    pedersen_with_separator(inputs, GENERATOR_INDEX__SILOED_COMMITMENT)[0]\n}\n\npub fn compute_unique_hash(nonce: Field, siloed_note_hash: Field) -> Field {\n    let inputs = [nonce, siloed_note_hash];\n    pedersen_with_separator(inputs, GENERATOR_INDEX__UNIQUE_COMMITMENT)[0]\n}\n",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/note/note_hash"
      },
      "52": {
        "source": "use crate::note::{\n    note_hash::{compute_inner_hash, compute_siloed_hash, compute_unique_hash},\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n};\nuse crate::utils::arr_copy_slice;\n\npub fn compute_inner_note_hash<Note, N>(\n    note_interface: NoteInterface<Note, N>,\n    note: Note,\n) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n\n    let compute_note_hash = note_interface.compute_note_hash;\n    let note_hash = compute_note_hash(note);\n\n    compute_inner_hash(header.storage_slot, note_hash)\n}\n\npub fn compute_siloed_note_hash<Note, N>(\n    note_interface: NoteInterface<Note, N>,\n    note_with_header: Note,\n) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let inner_note_hash = compute_inner_note_hash(note_interface, note_with_header);\n\n    compute_siloed_hash(header.contract_address, inner_note_hash)\n}\n\npub fn compute_unique_siloed_note_hash<Note, N>(\n    note_interface: NoteInterface<Note, N>,\n    note_with_header: Note,\n) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let siloed_note_hash = compute_siloed_note_hash(note_interface, note_with_header);\n\n    compute_unique_hash(header.nonce, siloed_note_hash)\n}\n\npub fn compute_note_hash_for_read_or_nullify<Note, N>(\n    note_interface: NoteInterface<Note, N>,\n    note_with_header: Note,\n) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1386)\n    if (header.is_transient) {\n        // If a note is transient, we just read the inner_note_hash (kernel will silo by contract address).\n        compute_inner_note_hash(note_interface, note_with_header)\n    } else if (header.nonce == 0) {\n        // If not transient and nonce is zero, that means we are reading a public note.\n        compute_siloed_note_hash(note_interface, note_with_header)\n    } else {\n        // When nonce is nonzero, that means we are reading a settled note (from tree) created in a\n        // previous TX. So we need the unique_siloed_note_hash which has already been hashed with\n        // contract address and then nonce. This hash will match the existing leaf in the private\n        // data tree, so the kernel can just perform a membership check directly on this hash/leaf.\n        compute_unique_siloed_note_hash(note_interface, note_with_header)\n    }\n\n}\n\npub fn compute_note_hash_and_nullifier<Note, N, S>(\n    note_interface: NoteInterface<Note, N>,\n    note_header: NoteHeader,\n    preimage: [Field; S],\n) -> [Field; 4] {\n    let deserialize = note_interface.deserialize;\n    let set_header = note_interface.set_header;\n    let mut note = deserialize(arr_copy_slice(preimage, [0; N], 0));\n    set_header(&mut note, note_header);\n\n    let compute_note_hash = note_interface.compute_note_hash;\n    let note_hash = compute_note_hash(note);\n    let inner_note_hash = compute_inner_hash(note_header.storage_slot, note_hash);\n\n    let siloed_note_hash = compute_siloed_hash(note_header.contract_address, inner_note_hash);\n\n    let unique_siloed_note_hash = compute_unique_hash(note_header.nonce, siloed_note_hash);\n\n    let compute_nullifier = note_interface.compute_nullifier;\n    let inner_nullifier = compute_nullifier(note);\n\n    [inner_note_hash, siloed_note_hash, unique_siloed_note_hash, inner_nullifier]\n}\n",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/note/utils"
      },
      "54": {
        "source": "#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained pub fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/oracle/arguments"
      },
      "59": {
        "source": "use crate::types::point::Point;\nuse crate::address::compute_address;\n\n#[oracle(getPublicKey)]\nfn get_public_key_oracle(_address: Field) -> [Field; 3] {}\n\nunconstrained fn get_public_key_internal(address: Field) -> [Field; 3] {\n  get_public_key_oracle(address)\n}\n\npub fn get_public_key(address: Field) -> Point {\n  let result = get_public_key_internal(address);\n  let pub_key_x = result[0];\n  let pub_key_y = result[1];\n  let partial_address = result[2];\n  \n  let calculated_address = compute_address(pub_key_x, pub_key_y, partial_address);\n  assert(calculated_address == address);\n  \n  Point::new(pub_key_x, pub_key_y)\n}\n",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/oracle/get_public_key"
      },
      "60": {
        "source": "use crate::oracle::get_public_key::get_public_key;\nuse crate::types::point::Point;\n\n#[oracle(getSecretKey)]\nfn get_secret_key_oracle(\n    _owner: Point,\n) -> [Field; dep::std::grumpkin_scalar::GRUMPKIN_SCALAR_SERIALIZED_LEN] {\n}\n\nunconstrained fn get_secret_key_internal(owner_public_key: Point) -> dep::std::grumpkin_scalar::GrumpkinScalar {\n    dep::std::grumpkin_scalar::deserialize_grumpkin_scalar(get_secret_key_oracle(owner_public_key))\n}\n\npub fn get_secret_key(owner: Field) -> dep::std::grumpkin_scalar::GrumpkinScalar {\n    let owner_public_key = get_public_key(owner);\n    let secret = get_secret_key_internal(owner_public_key);\n\n    // Constrain the owner - Nullifier secret key is currently just the encryption private key so we can constrain\n    // the owner by deriving the public key from the secret key and checking the result.\n    let computed_public_key = dep::std::grumpkin_scalar_mul::grumpkin_fixed_base(secret);\n    assert(owner_public_key.x == computed_public_key[0]);\n    assert(owner_public_key.y == computed_public_key[1]);\n\n    secret\n}\n",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/oracle/get_secret_key"
      },
      "62": {
        "source": "\n// contract_address + \n// args_hash +\n// crate::abi::FUNCTION_DATA_SIZE +\n// crate::abi::CALL_CONTEXT_SIZE +\n// = 2 + 4 + 7\nglobal ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE: Field = 13;\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(\n    _contract_address: Field, \n    _function_selector: Field, \n    _args_hash: Field,\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(\n    contract_address: Field, \n    function_selector: Field,\n    args_hash: Field\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {\n    enqueue_public_function_call_oracle(\n        contract_address, \n        function_selector, \n        args_hash,\n    )\n}",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/oracle/enqueue_public_function_call"
      },
      "64": {
        "source": "use dep::std::option::Option;\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n};\nuse crate::utils::arr_copy_slice;\n\n#[oracle(notifyCreatedNote)]\nfn notify_created_note_oracle<N>(\n    _storage_slot: Field,\n    _preimage: [Field; N],\n    _inner_note_hash: Field,\n) -> Field {}\n\nunconstrained pub fn notify_created_note<N>(\n    storage_slot: Field,\n    preimage: [Field; N],\n    inner_note_hash: Field,\n) -> Field {\n    notify_created_note_oracle(storage_slot, preimage, inner_note_hash)\n}\n\n#[oracle(notifyNullifiedNote)]\nfn notify_nullified_note_oracle<N>(\n    _nullifier: Field,\n    _inner_note_hash: Field,\n) -> Field {}\n\nunconstrained pub fn notify_nullified_note<N>(\n    nullifier: Field,\n    inner_note_hash: Field,\n) -> Field {\n    notify_nullified_note_oracle(nullifier, inner_note_hash)\n}\n\n#[oracle(getNotes)]\nfn get_notes_oracle<N, S>(\n    _storage_slot: Field,\n    _num_selects: u8,\n    _select_by: [u8; N],\n    _select_values: [Field; N],\n    _sort_by: [u8; N],\n    _sort_order: [u2; N],\n    _limit: u32,\n    _offset: u32,\n    _return_size: u32,\n    _placeholder_fields: [Field; S],\n) -> [Field; S] {}\n\nunconstrained fn get_notes_oracle_wrapper<N, S>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by: [u8; N],\n    select_values: [Field; N],\n    sort_by: [u8; N],\n    sort_order: [u2; N],\n    limit: u32,\n    offset: u32,\n    mut placeholder_fields: [Field; S],\n)-> [Field; S] {\n    let return_size = placeholder_fields.len() as u32;\n    get_notes_oracle(storage_slot, num_selects, select_by, select_values, sort_by, sort_order, limit, offset, return_size, placeholder_fields)\n}\n\nunconstrained pub fn get_notes<Note, N, M, S, NS>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    num_selects: u8,\n    select_by: [u8; M],\n    select_values: [Field; M],\n    sort_by: [u8; M],\n    sort_order: [u2; M],\n    limit: u32,\n    offset: u32,\n    mut placeholder_opt_notes: [Option<Note>; S], // TODO: Remove it and use `limit` to initialize the note array.\n    placeholder_fields: [Field; NS], // TODO: Remove it and use `limit` to initialize the note array.\n) -> [Option<Note>; S] {\n    let fields = get_notes_oracle_wrapper(storage_slot, num_selects, select_by, select_values, sort_by, sort_order, limit, offset, placeholder_fields);\n    let num_notes = fields[0] as u32;\n    let contract_address = fields[1];\n    let deserialize = note_interface.deserialize;\n    let set_header = note_interface.set_header;\n    for i in 0..placeholder_opt_notes.len() {\n        if i as u32 < num_notes {\n            // lengths named as per typescript.\n            let return_header_length: Field = 2; // num_notes & contract_address.\n            let extra_preimage_length: Field = 2; // nonce & is_transient.\n            let read_offset: Field = return_header_length + i * (N + extra_preimage_length);\n            let nonce = fields[read_offset];\n            let is_transient = fields[read_offset + 1] as bool;\n            let header = NoteHeader { contract_address, nonce, storage_slot, is_transient };\n            let preimage = arr_copy_slice(fields, [0; N], read_offset + 2);\n            let mut note = deserialize(preimage);\n            set_header(&mut note, header);\n            placeholder_opt_notes[i] = Option::some(note);\n        };\n    };\n    placeholder_opt_notes\n}\n\n#[oracle(checkNullifierExists)]\nfn check_nullifier_exists_oracle(\n    _inner_nullifier: Field,\n) -> Field {}\n\nunconstrained pub fn check_nullifier_exists(inner_nullifier: Field) -> bool {\n    check_nullifier_exists_oracle(inner_nullifier) == 1\n}",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/oracle/notes"
      },
      "65": {
        "source": "\n#[oracle(storageRead)]\nfn storage_read_oracle<N>(\n    _storage_slot: Field,\n    _number_of_elements: Field,\n) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field)-> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<T, N>(\n    storage_slot: Field,\n    deserialize: fn ([Field; N]) -> T,\n) -> T {\n    let fields = storage_read_oracle_wrapper(storage_slot);\n    deserialize(fields)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(\n    _storage_slot: Field,\n    _values: [Field; N],\n) -> [Field; N] {}\n\n// TODO: Remove return value.\nunconstrained pub fn storage_write<N>(\n    storage_slot: Field,\n    fields: [Field; N]\n) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/oracle/storage"
      },
      "68": {
        "source": "use crate::{\n    abi,\n    abi::{\n        PublicCircuitPublicInputs,\n        FunctionData,\n    },\n};\nuse crate::constants_gen::{\n    RETURN_VALUES_LENGTH,\n    GENERATOR_INDEX__CALL_STACK_ITEM,\n};\n\n// oracles\nuse crate::oracle::{\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n};\n\nstruct PublicCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PublicCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PublicCallStackItem {\n    pub fn hash(self) -> Field {\n        dep::std::hash::pedersen_with_separator([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)[0]\n    }\n}\n\n",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/public_call_stack_item"
      },
      "72": {
        "source": "use crate::context::{PrivateContext, PublicContext, Context};\nuse dep::std::option::Option;\n\n// docs:start:map\nstruct Map<V> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<V> Map<V> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V,\n    ) -> Map<V> {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map {\n            context,\n            storage_slot,\n            state_var_constructor,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: Field) -> V {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = dep::std::hash::pedersen([self.storage_slot, key])[0];\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/state_vars/map"
      },
      "73": {
        "source": "use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse crate::types::type_serialization::TypeSerializationInterface;\nuse dep::std::option::Option;\n\n// docs:start:public_state_struct\nstruct PublicState<T, T_SERIALIZED_LEN> {\n    storage_slot: Field,\n    serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n}\n// docs:end:public_state_struct\n\nimpl<T, T_SERIALIZED_LEN> PublicState<T, T_SERIALIZED_LEN> {\n    // docs:start:public_state_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        _: Context,\n        storage_slot: Field,\n        serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState {\n            storage_slot,\n            serialization_methods,\n        }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    pub fn read(self) -> T {\n        storage_read(self.storage_slot, self.serialization_methods.deserialize)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    pub fn write(self, value: T) {\n        let serialize = self.serialization_methods.serialize;\n        let fields = serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/state_vars/public_state"
      },
      "74": {
        "source": "use dep::std::option::Option;\nuse crate::abi::PublicContextInputs;\nuse crate::constants_gen::{MAX_NOTES_PER_PAGE, MAX_READ_REQUESTS_PER_CALL};\nuse crate::context::{PrivateContext, PublicContext, Context};\nuse crate::note::{\n    lifecycle::{create_note, create_note_hash_from_public, destroy_note},\n    note_getter::{get_notes, view_notes},\n    note_getter_options::NoteGetterOptions,\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_or_nullify,\n};\n\n// docs:start:struct\nstruct Set<Note, N> {\n    context: Context,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n}\n// docs:end:struct\n\nimpl<Note, N> Set<Note, N> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        note_interface: NoteInterface<Note, N>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Set {\n            context,\n            storage_slot,\n            note_interface,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:insert\n    pub fn insert(self, note: &mut Note) {\n        create_note(\n            self.context.private.unwrap(),\n            self.storage_slot,\n            note,\n            self.note_interface,\n        );\n    }\n    // docs:end:insert\n\n    // docs:start:insert_from_public\n    pub fn insert_from_public(self, note: &mut Note) {\n        create_note_hash_from_public(\n            self.context.public.unwrap(),\n            self.storage_slot,\n            note,\n            self.note_interface,\n        );\n    }\n    // docs:end:insert_from_public\n    \n    // DEPRECATED\n    fn assert_contains_and_remove(_self: Self, _note: &mut Note, _nonce: Field) {\n        assert(false, \"`assert_contains_and_remove` has been deprecated. Please call PXE.addNote() to add a note to the database. Then use Set.get_notes() and Set.remove() in your contract to verify and remove a note.\");\n    }\n\n    // DEPRECATED\n    fn assert_contains_and_remove_publicly_created(_self: Self, _note: &mut Note) {\n        assert(false, \"`assert_contains_and_remove_publicly_created` has been deprecated. Please call PXE.addNote() to add a note to the database. Then use Set.get_notes() and Set.remove() in your contract to verify and remove a note.\");\n    }\n\n    // docs:start:remove\n    pub fn remove(self, note: Note) {\n        let context = self.context.private.unwrap();\n        let note_hash = compute_note_hash_for_read_or_nullify(self.note_interface, note);\n        let has_been_read = context.read_requests.any(|r| r == note_hash);\n        assert(has_been_read, \"Can only remove a note that has been read from the set.\");\n\n        destroy_note(\n            context,\n            note,\n            self.note_interface,\n        );\n    }\n    // docs:end:remove\n\n    // docs:start:get_notes\n    pub fn get_notes<FILTER_ARGS>(\n        self,\n        options: NoteGetterOptions<Note, N, FILTER_ARGS>,\n    ) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n        let storage_slot = self.storage_slot;\n        let opt_notes = get_notes(\n            self.context.private.unwrap(),\n            storage_slot,\n            self.note_interface,\n            options,\n        );\n        opt_notes\n    }\n    // docs:end:get_notes\n\n    // docs:start:view_notes\n    unconstrained pub fn view_notes(\n        self,\n        options: NoteViewerOptions<Note, N>,\n    ) -> [Option<Note>; MAX_NOTES_PER_PAGE] {\n        view_notes(self.storage_slot, self.note_interface, options)\n    }\n    // docs:end:view_notes\n}\n",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/state_vars/set"
      },
      "79": {
        "source": "\nstruct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    len: Field,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    pub fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0 }\n    }\n\n    pub fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    pub fn get_unchecked(mut self: Self, index: Field) -> T {\n        self.storage[index]\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64);\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn push_array<Len>(&mut self, array: [T; Len]) {\n        let newLen = self.len + array.len();\n        assert(newLen as u64 <= MaxLen as u64);\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = newLen;\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n\n        let elem = self.storage[self.len - 1];\n        self.len -= 1;\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}\n\n#[test]\nfn test_vec_push_pop() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    assert(vec.len == 0);\n    vec.push(2);\n    assert(vec.len == 1);\n    vec.push(4);\n    assert(vec.len == 2);\n    vec.push(6);\n    assert(vec.len == 3);\n    let x = vec.pop();\n    assert(x == 6);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test]\nfn test_vec_push_array() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test(should_fail)]\nfn test_vec_get_out_of_bound() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    let _x = vec.get(2);\n}\n\n#[test(should_fail)]\nfn test_vec_get_not_declared() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2]);\n    let _x = vec.get(1);\n}\n\n#[test(should_fail)]\nfn test_vec_get_uninitialized() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    let _x = vec.get(0);\n}\n\n#[test(should_fail)]\nfn test_vec_push_overflow() {\n    let mut vec: BoundedVec<Field, 1> = BoundedVec::new(0);\n    vec.push(1);\n    vec.push(2);\n}\n\n#[test]\nfn test_vec_any() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4, 6]);\n    assert(vec.any(|v| v == 2) == true);\n    assert(vec.any(|v| v == 4) == true);\n    assert(vec.any(|v| v == 6) == true);\n    assert(vec.any(|v| v == 3) == false);\n}\n\n#[test]\nfn test_vec_any_not_default() {\n    let default_value = 1;\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(default_value);\n    vec.push_array([2, 4]);\n    assert(vec.any(|v| v == default_value) == false);\n}",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/types/vec"
      },
      "82": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\n\n// docs:start:field_serialization\nglobal FIELD_SERIALIZED_LEN: Field = 1;\n\nfn deserializeField(fields: [Field; FIELD_SERIALIZED_LEN]) -> Field {\n    fields[0]\n}\n\nfn serializeField(value: Field) -> [Field; FIELD_SERIALIZED_LEN] {\n    [value]\n}\n\nglobal FieldSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeField,\n    serialize: serializeField,\n};\n// docs:end:field_serialization",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/types/type_serialization/field_serialization"
      },
      "84": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\nuse crate::types::address::AztecAddress;\n\nglobal AZTEC_ADDRESS_SERIALIZED_LEN: Field = 1;\n\nfn deserialize(fields: [Field; AZTEC_ADDRESS_SERIALIZED_LEN]) -> AztecAddress {\n    AztecAddress::new(fields[0])\n}\n\nfn serialize(value: AztecAddress) -> [Field; AZTEC_ADDRESS_SERIALIZED_LEN] {\n    [value.address]\n}\n\nglobal AztecAddressSerializationMethods = TypeSerializationInterface {\n    deserialize,\n    serialize,\n};",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/types/type_serialization/aztec_address_serialization"
      },
      "85": {
        "source": "pub fn arr_copy_slice<T, N, M>(\n    src: [T; N],\n    mut dst: [T; M],\n    offset: Field,\n) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n\npub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() as u32 < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}",
        "path": "/home/ritik/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.8.10/yarn-project/aztec-nr/aztec/src/utils"
      },
      "90": {
        "source": "use dep::aztec::note::note_interface::NoteInterface;\nuse dep::aztec::note::note_header::NoteHeader;\nuse dep::aztec::note::utils::compute_siloed_note_hash;\nuse dep::aztec::oracle::get_secret_key::get_secret_key;\n\nglobal ADDRESS_NOTE_LEN: Field = 2;\n\n// Stores an address\nstruct AddressNote {\n    address: Field,\n    owner: Field,\n    header: NoteHeader,\n}\n\nimpl AddressNote {\n    pub fn new(address: Field, owner: Field) -> Self {\n        AddressNote {\n            address,\n            owner,\n            header: NoteHeader::empty(),\n        }\n    }\n\n    pub fn serialize(self) -> [Field; ADDRESS_NOTE_LEN]{\n        [self.address, self.owner]\n    }\n\n    pub fn compute_nullifier(self) -> Field {\n        let siloed_note_hash = compute_siloed_note_hash(AddressNoteMethods, self);\n        let secret = get_secret_key(self.owner);\n        // TODO(#1205) Should use a non-zero generator index.\n        dep::std::hash::pedersen([\n            siloed_note_hash,\n            secret.low,\n            secret.high,\n        ])[0]\n    }\n\n    pub fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n}\n\nfn deserialize(preimage: [Field; ADDRESS_NOTE_LEN]) -> AddressNote {\n    AddressNote {\n        address: preimage[0],\n        owner: preimage[1],\n        header: NoteHeader::empty(),\n    }\n}\n\nfn serialize(note: AddressNote) -> [Field; ADDRESS_NOTE_LEN]{\n    note.serialize()\n}\n\nfn compute_note_hash(note: AddressNote) -> Field {\n    // TODO(#1205) Should use a non-zero generator index.\n    dep::std::hash::pedersen(note.serialize())[0]\n}\n\nfn compute_nullifier(note: AddressNote) -> Field {\n    note.compute_nullifier()\n}\n\nfn get_header(note: AddressNote) -> NoteHeader {\n    note.header\n}\n\nfn set_header(note: &mut AddressNote, header: NoteHeader) {\n    note.set_header(header);\n}\n\nglobal AddressNoteMethods = NoteInterface {\n    deserialize,\n    serialize,\n    compute_note_hash,\n    compute_nullifier,\n    get_header,\n    set_header,\n};",
        "path": "/home/ritik/hello_aztec/nft_standards/contracts/pn721/src/address_note"
      },
      "91": {
        "source": "   use dep::aztec::types::type_serialization::TypeSerializationInterface;\n   \n   struct PublicPayload {\n        project: Field,\n        tier: Field,\n        creation: Field,\n    }\n\n    impl PublicPayload {\n\n        pub fn new(project: Field,\n        tier: Field,\n        creation: Field,\n         ) -> Self {\n            Self {\n                project,               \n                tier,\n                creation,\n            }\n        }\n        pub fn get(&mut self,\n         ) ->  [Field] {\n            [self.project, self.tier, self.creation]\n        }\n    }\n\nglobal PUBLIC_PAYLOAD_SERIALIZED_LEN: Field = 3;\n\npub fn deserializePublicPayload(fields: [Field; PUBLIC_PAYLOAD_SERIALIZED_LEN]) -> PublicPayload {\n    PublicPayload{project: fields[0] as Field, tier: fields[1] as Field, creation: fields[2] as Field}\n}\n\npub fn serializePublicPayload(pp: PublicPayload) -> [Field; PUBLIC_PAYLOAD_SERIALIZED_LEN] {\n    [pp.project, pp.tier, pp.creation]\n}\n\n\nglobal PublicPayloadSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializePublicPayload,\n    serialize: serializePublicPayload,\n};",
        "path": "/home/ritik/hello_aztec/nft_standards/contracts/pn721/src/public_payload"
      }
    }
  }
}